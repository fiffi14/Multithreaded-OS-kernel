GAS LISTING /tmp/ccV7zWtX.s 			page 1


   1              		.file	"tcb.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN6Kernel3TCB10thrWrapperEv
   9              	_ZN6Kernel3TCB10thrWrapperEv:
  10              	.LFB43:
  11              		.file 1 "src/tcb.cpp"
   1:src/tcb.cpp   **** //
   2:src/tcb.cpp   **** // Created by os on 8/22/24.
   3:src/tcb.cpp   **** //
   4:src/tcb.cpp   **** 
   5:src/tcb.cpp   **** #include "../h/tcb.hpp"
   6:src/tcb.cpp   **** #include "../h/syscall_c.h"
   7:src/tcb.cpp   **** #include "../h/memoryallocator.hpp"
   8:src/tcb.cpp   **** #include "../h/scheduler.hpp"
   9:src/tcb.cpp   **** 
  10:src/tcb.cpp   **** namespace Kernel { //DA LI DOZVOLITI SIE ZA PREKIDE u superv rezimu
  11:src/tcb.cpp   **** 
  12:src/tcb.cpp   ****     TCB *TCB::running = nullptr;
  13:src/tcb.cpp   ****     TCB *TCB::oldRunning = nullptr;
  14:src/tcb.cpp   ****     int TCB::cntActiveT = 1;
  15:src/tcb.cpp   ****     //int TCB::cntTimeSlice = 0;
  16:src/tcb.cpp   **** 
  17:src/tcb.cpp   ****     TCB::TCB(Body b, void *arg, uint64 *stack) :
  18:src/tcb.cpp   ****         body(b),
  19:src/tcb.cpp   ****         arg(arg),
  20:src/tcb.cpp   ****         stack(stack),
  21:src/tcb.cpp   ****         context({
  22:src/tcb.cpp   ****          (uint64) &thrWrapper,
  23:src/tcb.cpp   ****          stack != nullptr? (uint64) &stack[DEFAULT_STACK_SIZE]:0
  24:src/tcb.cpp   ****         }),
  25:src/tcb.cpp   ****         finished(false),
  26:src/tcb.cpp   ****         blocked(false)
  27:src/tcb.cpp   **** 
  28:src/tcb.cpp   ****     {
  29:src/tcb.cpp   ****         if(b!=nullptr) {
  30:src/tcb.cpp   ****             Sstack = (uint64*) MemoryAllocator::__mem__alloc(Riscv::roundToBlks(DEFAULT_STACK_SIZE)
  31:src/tcb.cpp   ****             cntActiveT++;
  32:src/tcb.cpp   ****             Scheduler::put(this);
  33:src/tcb.cpp   ****         }
  34:src/tcb.cpp   ****     }
  35:src/tcb.cpp   ****     TCB::~TCB() {
  36:src/tcb.cpp   ****         if(body) cntActiveT--;
  37:src/tcb.cpp   ****         MemoryAllocator::__mem__free(stack);
  38:src/tcb.cpp   ****         MemoryAllocator::__mem__free(Sstack); //izbegavanje ugnz sis poziva
  39:src/tcb.cpp   ****     }
  40:src/tcb.cpp   **** 
  41:src/tcb.cpp   **** 
  42:src/tcb.cpp   **** 
  43:src/tcb.cpp   **** 
  44:src/tcb.cpp   ****     void TCB::yield(TCB *oldT, TCB *newT) { //sinhrono
  45:src/tcb.cpp   ****         //if (oldT == nullptr || newT == nullptr) return;
  46:src/tcb.cpp   ****         Riscv::pushRegs();
  47:src/tcb.cpp   ****         switchContext(&oldT->context, &newT->context);
GAS LISTING /tmp/ccV7zWtX.s 			page 2


  48:src/tcb.cpp   ****         Riscv::popRegs();
  49:src/tcb.cpp   ****         // if(oldRunning->isFinished()) { // mora oldR jer oldT je neki praistorijski parm u odnosu
  50:src/tcb.cpp   ****         //     delete oldRunning;
  51:src/tcb.cpp   ****         // }
  52:src/tcb.cpp   ****     }
  53:src/tcb.cpp   **** 
  54:src/tcb.cpp   ****     void TCB::dispatch() {
  55:src/tcb.cpp   ****         TCB *oldR = running;
  56:src/tcb.cpp   ****         if(!oldR->isFinished() && !oldR->isBlocked()) {
  57:src/tcb.cpp   ****             Scheduler::put(oldR);
  58:src/tcb.cpp   ****         }
  59:src/tcb.cpp   ****         running = Scheduler::get();
  60:src/tcb.cpp   **** 
  61:src/tcb.cpp   ****         if(oldR!=running) {
  62:src/tcb.cpp   ****             yield(oldR, running);
  63:src/tcb.cpp   ****         }
  64:src/tcb.cpp   **** 
  65:src/tcb.cpp   ****     }
  66:src/tcb.cpp   **** 
  67:src/tcb.cpp   ****     void TCB::thrWrapper() {
  12              		.loc 1 67 28
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18 000c 23349100 		sd	s1,8(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040102 		addi	s0,sp,32
  23              		.cfi_def_cfa 8, 0
  68:src/tcb.cpp   ****         Riscv::popSppSpie(); //popovanje sadrzaja sstatus registra zbog promene privilegije
  24              		.loc 1 68 9
  25              		.loc 1 68 26 is_stmt 0
  26 0014 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  26      E7800000 
  27              	.LVL0:
  69:src/tcb.cpp   ****         running->body(running->arg); //za sve niti ce ovo raditi kada krecu, pa mora kroz running
  28              		.loc 1 69 9 is_stmt 1
  29              		.loc 1 69 18 is_stmt 0
  30 001c 97040000 		lla	s1,.LANCHOR0
  30      93840400 
  31 0024 83B70400 		ld	a5,0(s1)
  32 0028 03B70700 		ld	a4,0(a5)
  33              		.loc 1 69 22
  34 002c 03B58700 		ld	a0,8(a5)
  35 0030 E7000700 		jalr	a4
  36              	.LVL1:
  70:src/tcb.cpp   ****         running->setFinished(true);
  37              		.loc 1 70 9 is_stmt 1
  38              		.loc 1 70 29 is_stmt 0
  39 0034 83B70400 		ld	a5,0(s1)
  40              	.LVL2:
  41              	.LBB19:
  42              	.LBB20:
  43              		.file 2 "src/../h/tcb.hpp"
GAS LISTING /tmp/ccV7zWtX.s 			page 3


   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 8/22/24.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef TCB_HPP
   6:src/../h/tcb.hpp **** #define TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** 
  10:src/../h/tcb.hpp **** #include "../h/riscv.hpp"
  11:src/../h/tcb.hpp **** namespace Kernel {
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** class TCB {
  14:src/../h/tcb.hpp **** public:
  15:src/../h/tcb.hpp ****   using Body = void (*)(void *);
  16:src/../h/tcb.hpp ****   TCB(Body b, void *arg, uint64 *stack);
  17:src/../h/tcb.hpp ****   ~TCB();
  18:src/../h/tcb.hpp **** 
  19:src/../h/tcb.hpp ****   bool isFinished() const { return finished; }
  20:src/../h/tcb.hpp ****   void setFinished(bool b) { finished = b; }
  44              		.loc 2 20 30 is_stmt 1
  45              		.loc 2 20 39 is_stmt 0
  46 0038 13071000 		li	a4,1
  47 003c 2384E702 		sb	a4,40(a5)
  48              	.LVL3:
  49              	.LBE20:
  50              	.LBE19:
  71:src/tcb.cpp   ****         thread_exit();
  51              		.loc 1 71 9 is_stmt 1
  52              		.loc 1 71 20 is_stmt 0
  53 0040 97000000 		call	_Z11thread_exitv@plt
  53      E7800000 
  54              	.LVL4:
  72:src/tcb.cpp   ****     }
  55              		.loc 1 72 5
  56 0048 83308101 		ld	ra,24(sp)
  57              		.cfi_restore 1
  58 004c 03340101 		ld	s0,16(sp)
  59              		.cfi_restore 8
  60              		.cfi_def_cfa 2, 32
  61 0050 83348100 		ld	s1,8(sp)
  62              		.cfi_restore 9
  63 0054 13010102 		addi	sp,sp,32
  64              		.cfi_def_cfa_offset 0
  65 0058 67800000 		jr	ra
  66              		.cfi_endproc
  67              	.LFE43:
  69              		.align	2
  70              		.globl	_ZN6Kernel3TCBC2EPFvPvES1_Pm
  72              	_ZN6Kernel3TCBC2EPFvPvES1_Pm:
  73              	.LFB36:
  17:src/tcb.cpp   ****         body(b),
  74              		.loc 1 17 5 is_stmt 1
  75              		.cfi_startproc
  76              	.LVL5:
  77 005c 130101FE 		addi	sp,sp,-32
  78              		.cfi_def_cfa_offset 32
GAS LISTING /tmp/ccV7zWtX.s 			page 4


  79 0060 233C1100 		sd	ra,24(sp)
  80 0064 23388100 		sd	s0,16(sp)
  81 0068 23349100 		sd	s1,8(sp)
  82              		.cfi_offset 1, -8
  83              		.cfi_offset 8, -16
  84              		.cfi_offset 9, -24
  85 006c 13040102 		addi	s0,sp,32
  86              		.cfi_def_cfa 8, 0
  87 0070 93040500 		mv	s1,a0
  88              	.LBB21:
  26:src/tcb.cpp   **** 
  89              		.loc 1 26 22 is_stmt 0
  90 0074 2330B500 		sd	a1,0(a0)
  91 0078 2334C500 		sd	a2,8(a0)
  92 007c 2338D500 		sd	a3,16(a0)
  93 0080 97070000 		lla	a5,_ZN6Kernel3TCB10thrWrapperEv
  93      93870700 
  94 0088 233CF500 		sd	a5,24(a0)
  23:src/tcb.cpp   ****         }),
  95              		.loc 1 23 26
  96 008c 63800606 		beqz	a3,.L6
  23:src/tcb.cpp   ****         }),
  97              		.loc 1 23 37 discriminator 1
  98 0090 B7870000 		li	a5,32768
  99 0094 B386F600 		add	a3,a3,a5
 100              	.LVL6:
 101              	.L4:
  26:src/tcb.cpp   **** 
 102              		.loc 1 26 22
 103 0098 23B0D402 		sd	a3,32(s1)
 104 009c 23840402 		sb	zero,40(s1)
 105 00a0 23800404 		sb	zero,64(s1)
  29:src/tcb.cpp   ****             Sstack = (uint64*) MemoryAllocator::__mem__alloc(Riscv::roundToBlks(DEFAULT_STACK_SIZE)
 106              		.loc 1 29 9 is_stmt 1
 107 00a4 638A0502 		beqz	a1,.L3
  30:src/tcb.cpp   ****             cntActiveT++;
 108              		.loc 1 30 13
 109              	.LVL7:
 110              	.LBE21:
 111              		.file 3 "src/../h/../h/riscv.hpp"
   1:src/../h/../h/riscv.hpp **** //
   2:src/../h/../h/riscv.hpp **** // Created by os on 8/19/24.
   3:src/../h/../h/riscv.hpp **** //
   4:src/../h/../h/riscv.hpp **** 
   5:src/../h/../h/riscv.hpp **** #ifndef RISCV_HPP
   6:src/../h/../h/riscv.hpp **** #define RISCV_HPP
   7:src/../h/../h/riscv.hpp **** 
   8:src/../h/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/../h/riscv.hpp **** #include "../h/memoryallocator.hpp"
  10:src/../h/../h/riscv.hpp **** 
  11:src/../h/../h/riscv.hpp **** class Riscv {
  12:src/../h/../h/riscv.hpp **** public:
  13:src/../h/../h/riscv.hpp **** 	// read register scause
  14:src/../h/../h/riscv.hpp ****     static uint64 r_scause();
  15:src/../h/../h/riscv.hpp **** 
  16:src/../h/../h/riscv.hpp ****     // write register scause
  17:src/../h/../h/riscv.hpp ****     static void w_scause(uint64 scause);
GAS LISTING /tmp/ccV7zWtX.s 			page 5


  18:src/../h/../h/riscv.hpp **** 
  19:src/../h/../h/riscv.hpp ****     // read register sepc
  20:src/../h/../h/riscv.hpp ****     static uint64 r_sepc();
  21:src/../h/../h/riscv.hpp **** 
  22:src/../h/../h/riscv.hpp ****     // write register sepc
  23:src/../h/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  24:src/../h/../h/riscv.hpp **** 
  25:src/../h/../h/riscv.hpp ****     // read register stvec
  26:src/../h/../h/riscv.hpp ****     static uint64 r_stvec();
  27:src/../h/../h/riscv.hpp **** 
  28:src/../h/../h/riscv.hpp ****     // write register stvec
  29:src/../h/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  30:src/../h/../h/riscv.hpp **** 
  31:src/../h/../h/riscv.hpp ****     // read register stval
  32:src/../h/../h/riscv.hpp ****     static uint64 r_stval();
  33:src/../h/../h/riscv.hpp **** 
  34:src/../h/../h/riscv.hpp ****     // write register stval
  35:src/../h/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  36:src/../h/../h/riscv.hpp **** 
  37:src/../h/../h/riscv.hpp ****     enum BitMaskSip //koji zahtevi za prekid su trenutno aktivni
  38:src/../h/../h/riscv.hpp ****     { //1-postoji zahtev za prekid; 0-prekid je obradjen
  39:src/../h/../h/riscv.hpp ****         SIP_SSIP = (1 << 1), //SOFTWARE INTP PENDING;
  40:src/../h/../h/riscv.hpp ****         SIP_STIP = (1 << 5), //TIMER IP
  41:src/../h/../h/riscv.hpp ****         SIP_SEIP = (1 << 9), //EXTERNAL IP
  42:src/../h/../h/riscv.hpp ****     };
  43:src/../h/../h/riscv.hpp ****     //AKO SE IZVR SUPERVISOR REZIM I bit SIE U sstatus IMA VR 0, VR REGS SIE SE IGNORISE
  44:src/../h/../h/riscv.hpp ****     // mask set register sip
  45:src/../h/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  46:src/../h/../h/riscv.hpp **** 
  47:src/../h/../h/riscv.hpp ****     // mask clear register sip
  48:src/../h/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  49:src/../h/../h/riscv.hpp **** 
  50:src/../h/../h/riscv.hpp ****     // read register sip
  51:src/../h/../h/riscv.hpp ****     static uint64 r_sip();
  52:src/../h/../h/riscv.hpp **** 
  53:src/../h/../h/riscv.hpp ****     // write register sip
  54:src/../h/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  55:src/../h/../h/riscv.hpp **** 
  56:src/../h/../h/riscv.hpp ****     enum BitMaskSstatus
  57:src/../h/../h/riscv.hpp ****     {
  58:src/../h/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/../h/riscv.hpp ****     };
  62:src/../h/../h/riscv.hpp **** 
  63:src/../h/../h/riscv.hpp ****     // mask set register sstatus
  64:src/../h/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  65:src/../h/../h/riscv.hpp **** 
  66:src/../h/../h/riscv.hpp ****     // mask clear register sstatus
  67:src/../h/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/../h/riscv.hpp **** 
  69:src/../h/../h/riscv.hpp ****     // read register sstatus
  70:src/../h/../h/riscv.hpp ****     static uint64 r_sstatus();
  71:src/../h/../h/riscv.hpp **** 
  72:src/../h/../h/riscv.hpp ****     // write register sstatus
  73:src/../h/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/../h/riscv.hpp **** 
GAS LISTING /tmp/ccV7zWtX.s 			page 6


  75:src/../h/../h/riscv.hpp ****     static void popSppSpie(); //popuj bitove spp i spie iz sstatus
  76:src/../h/../h/riscv.hpp ****     	//spp je supervisor previous privilege; spie supervisor previous intp enable
  77:src/../h/../h/riscv.hpp ****     //mora biti non inline!!!
  78:src/../h/../h/riscv.hpp **** 
  79:src/../h/../h/riscv.hpp ****     static void intpRoutine();
  80:src/../h/../h/riscv.hpp **** 
  81:src/../h/../h/riscv.hpp ****     static size_t roundToBlks(size_t size);
  82:src/../h/../h/riscv.hpp **** 
  83:src/../h/../h/riscv.hpp ****     static uint64 syscall(uint64 code, uint64 arg1=0UL, uint64 arg2=0UL, uint64 arg3=0UL, uint64 ar
  84:src/../h/../h/riscv.hpp **** 
  85:src/../h/../h/riscv.hpp ****     static void pushRegs();
  86:src/../h/../h/riscv.hpp ****     static void popRegs();
  87:src/../h/../h/riscv.hpp **** private:
  88:src/../h/../h/riscv.hpp **** 	static uint64 intpHandle(uint64 code, uint64 arg1, uint64 arg2, uint64 arg3, uint64 arg4);
  89:src/../h/../h/riscv.hpp **** };
  90:src/../h/../h/riscv.hpp **** 
  91:src/../h/../h/riscv.hpp **** 
  92:src/../h/../h/riscv.hpp **** inline size_t Riscv::roundToBlks(size_t size) //od 64B koristi se 48B
  93:src/../h/../h/riscv.hpp **** {
  94:src/../h/../h/riscv.hpp ****     size += sizeof(Kernel::MemoryAllocator::BlkHeader);
 112              		.loc 3 94 5
  95:src/../h/../h/riscv.hpp ****     return size/MEM_BLOCK_SIZE + (size%MEM_BLOCK_SIZE ? 1 : 0);
 113              		.loc 3 95 5
 114              	.LBB22:
  30:src/tcb.cpp   ****             cntActiveT++;
 115              		.loc 1 30 61 is_stmt 0
 116 00a8 13051004 		li	a0,65
 117              	.LVL8:
 118 00ac 97000000 		call	_ZN6Kernel15MemoryAllocator12__mem__allocEm@plt
 118      E7800000 
 119              	.LVL9:
  30:src/tcb.cpp   ****             cntActiveT++;
 120              		.loc 1 30 20
 121 00b4 23B8A402 		sd	a0,48(s1)
  31:src/tcb.cpp   ****             Scheduler::put(this);
 122              		.loc 1 31 13 is_stmt 1
  31:src/tcb.cpp   ****             Scheduler::put(this);
 123              		.loc 1 31 23 is_stmt 0
 124 00b8 17070000 		lla	a4,.LANCHOR1
 124      13070700 
 125 00c0 83270700 		lw	a5,0(a4)
 126 00c4 9B871700 		addiw	a5,a5,1
 127 00c8 2320F700 		sw	a5,0(a4)
  32:src/tcb.cpp   ****         }
 128              		.loc 1 32 13 is_stmt 1
  32:src/tcb.cpp   ****         }
 129              		.loc 1 32 27 is_stmt 0
 130 00cc 13850400 		mv	a0,s1
 131 00d0 97000000 		call	_ZN6Kernel9Scheduler3putEPNS_3TCBE@plt
 131      E7800000 
 132              	.LVL10:
 133              	.L3:
 134              	.LBE22:
  34:src/tcb.cpp   ****     TCB::~TCB() {
 135              		.loc 1 34 5
 136 00d8 83308101 		ld	ra,24(sp)
 137              		.cfi_remember_state
GAS LISTING /tmp/ccV7zWtX.s 			page 7


 138              		.cfi_restore 1
 139 00dc 03340101 		ld	s0,16(sp)
 140              		.cfi_restore 8
 141              		.cfi_def_cfa 2, 32
 142 00e0 83348100 		ld	s1,8(sp)
 143              		.cfi_restore 9
 144              	.LVL11:
 145 00e4 13010102 		addi	sp,sp,32
 146              		.cfi_def_cfa_offset 0
 147 00e8 67800000 		jr	ra
 148              	.LVL12:
 149              	.L6:
 150              		.cfi_restore_state
 151              	.LBB23:
  23:src/tcb.cpp   ****         }),
 152              		.loc 1 23 26
 153 00ec 93060000 		li	a3,0
 154              	.LVL13:
 155 00f0 6FF09FFA 		j	.L4
 156              	.LBE23:
 157              		.cfi_endproc
 158              	.LFE36:
 160              		.globl	_ZN6Kernel3TCBC1EPFvPvES1_Pm
 161              		.set	_ZN6Kernel3TCBC1EPFvPvES1_Pm,_ZN6Kernel3TCBC2EPFvPvES1_Pm
 162              		.align	2
 163              		.globl	_ZN6Kernel3TCBD2Ev
 165              	_ZN6Kernel3TCBD2Ev:
 166              	.LFB39:
  35:src/tcb.cpp   ****         if(body) cntActiveT--;
 167              		.loc 1 35 5 is_stmt 1
 168              		.cfi_startproc
 169              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 170              		.cfi_lsda 0x1b,.LLSDA39
 171              	.LVL14:
 172 00f4 130101FE 		addi	sp,sp,-32
 173              		.cfi_def_cfa_offset 32
 174 00f8 233C1100 		sd	ra,24(sp)
 175 00fc 23388100 		sd	s0,16(sp)
 176 0100 23349100 		sd	s1,8(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179              		.cfi_offset 9, -24
 180 0104 13040102 		addi	s0,sp,32
 181              		.cfi_def_cfa 8, 0
 182 0108 93040500 		mv	s1,a0
 183              	.LBB24:
  36:src/tcb.cpp   ****         MemoryAllocator::__mem__free(stack);
 184              		.loc 1 36 9
  36:src/tcb.cpp   ****         MemoryAllocator::__mem__free(stack);
 185              		.loc 1 36 12 is_stmt 0
 186 010c 83370500 		ld	a5,0(a0)
  36:src/tcb.cpp   ****         MemoryAllocator::__mem__free(stack);
 187              		.loc 1 36 9
 188 0110 638C0700 		beqz	a5,.L9
  36:src/tcb.cpp   ****         MemoryAllocator::__mem__free(stack);
 189              		.loc 1 36 18 is_stmt 1 discriminator 1
  36:src/tcb.cpp   ****         MemoryAllocator::__mem__free(stack);
GAS LISTING /tmp/ccV7zWtX.s 			page 8


 190              		.loc 1 36 28 is_stmt 0 discriminator 1
 191 0114 17070000 		lla	a4,.LANCHOR1
 191      13070700 
 192 011c 83270700 		lw	a5,0(a4)
 193 0120 9B87F7FF 		addiw	a5,a5,-1
 194 0124 2320F700 		sw	a5,0(a4)
 195              	.L9:
  37:src/tcb.cpp   ****         MemoryAllocator::__mem__free(Sstack); //izbegavanje ugnz sis poziva
 196              		.loc 1 37 9 is_stmt 1
  37:src/tcb.cpp   ****         MemoryAllocator::__mem__free(Sstack); //izbegavanje ugnz sis poziva
 197              		.loc 1 37 37 is_stmt 0
 198 0128 03B50401 		ld	a0,16(s1)
 199              	.LVL15:
 200 012c 97000000 		call	_ZN6Kernel15MemoryAllocator11__mem__freeEPv@plt
 200      E7800000 
 201              	.LVL16:
  38:src/tcb.cpp   ****     }
 202              		.loc 1 38 9 is_stmt 1
  38:src/tcb.cpp   ****     }
 203              		.loc 1 38 37 is_stmt 0
 204 0134 03B50403 		ld	a0,48(s1)
 205 0138 97000000 		call	_ZN6Kernel15MemoryAllocator11__mem__freeEPv@plt
 205      E7800000 
 206              	.LVL17:
 207              	.LBE24:
  39:src/tcb.cpp   **** 
 208              		.loc 1 39 5
 209 0140 83308101 		ld	ra,24(sp)
 210              		.cfi_restore 1
 211 0144 03340101 		ld	s0,16(sp)
 212              		.cfi_restore 8
 213              		.cfi_def_cfa 2, 32
 214 0148 83348100 		ld	s1,8(sp)
 215              		.cfi_restore 9
 216              	.LVL18:
 217 014c 13010102 		addi	sp,sp,32
 218              		.cfi_def_cfa_offset 0
 219 0150 67800000 		jr	ra
 220              		.cfi_endproc
 221              	.LFE39:
 222              		.globl	__gxx_personality_v0
 223              		.section	.gcc_except_table,"a",@progbits
 224              	.LLSDA39:
 225 0000 FF       		.byte	0xff
 226 0001 FF       		.byte	0xff
 227 0002 03       		.byte	0x3
 228 0003 00       		.byte	0
 229              		.text
 231              		.globl	_ZN6Kernel3TCBD1Ev
 232              		.set	_ZN6Kernel3TCBD1Ev,_ZN6Kernel3TCBD2Ev
 233              		.align	2
 234              		.globl	_ZN6Kernel3TCB5yieldEPS0_S1_
 236              	_ZN6Kernel3TCB5yieldEPS0_S1_:
 237              	.LFB41:
  44:src/tcb.cpp   ****         //if (oldT == nullptr || newT == nullptr) return;
 238              		.loc 1 44 43 is_stmt 1
 239              		.cfi_startproc
GAS LISTING /tmp/ccV7zWtX.s 			page 9


 240              	.LVL19:
 241 0154 130101FE 		addi	sp,sp,-32
 242              		.cfi_def_cfa_offset 32
 243 0158 233C1100 		sd	ra,24(sp)
 244 015c 23388100 		sd	s0,16(sp)
 245 0160 23349100 		sd	s1,8(sp)
 246 0164 23302101 		sd	s2,0(sp)
 247              		.cfi_offset 1, -8
 248              		.cfi_offset 8, -16
 249              		.cfi_offset 9, -24
 250              		.cfi_offset 18, -32
 251 0168 13040102 		addi	s0,sp,32
 252              		.cfi_def_cfa 8, 0
 253 016c 93040500 		mv	s1,a0
 254 0170 13890500 		mv	s2,a1
  46:src/tcb.cpp   ****         switchContext(&oldT->context, &newT->context);
 255              		.loc 1 46 9
  46:src/tcb.cpp   ****         switchContext(&oldT->context, &newT->context);
 256              		.loc 1 46 24 is_stmt 0
 257 0174 97000000 		call	_ZN5Riscv8pushRegsEv@plt
 257      E7800000 
 258              	.LVL20:
  47:src/tcb.cpp   ****         Riscv::popRegs();
 259              		.loc 1 47 9 is_stmt 1
  47:src/tcb.cpp   ****         Riscv::popRegs();
 260              		.loc 1 47 22 is_stmt 0
 261 017c 93058901 		addi	a1,s2,24
 262 0180 13858401 		addi	a0,s1,24
 263 0184 97000000 		call	_ZN6Kernel3TCB13switchContextEPNS0_7ContextES2_@plt
 263      E7800000 
 264              	.LVL21:
  48:src/tcb.cpp   ****         // if(oldRunning->isFinished()) { // mora oldR jer oldT je neki praistorijski parm u odnosu
 265              		.loc 1 48 9 is_stmt 1
  48:src/tcb.cpp   ****         // if(oldRunning->isFinished()) { // mora oldR jer oldT je neki praistorijski parm u odnosu
 266              		.loc 1 48 23 is_stmt 0
 267 018c 97000000 		call	_ZN5Riscv7popRegsEv@plt
 267      E7800000 
 268              	.LVL22:
  52:src/tcb.cpp   **** 
 269              		.loc 1 52 5
 270 0194 83308101 		ld	ra,24(sp)
 271              		.cfi_restore 1
 272 0198 03340101 		ld	s0,16(sp)
 273              		.cfi_restore 8
 274              		.cfi_def_cfa 2, 32
 275 019c 83348100 		ld	s1,8(sp)
 276              		.cfi_restore 9
 277              	.LVL23:
 278 01a0 03390100 		ld	s2,0(sp)
 279              		.cfi_restore 18
 280              	.LVL24:
 281 01a4 13010102 		addi	sp,sp,32
 282              		.cfi_def_cfa_offset 0
 283 01a8 67800000 		jr	ra
 284              		.cfi_endproc
 285              	.LFE41:
 287              		.align	2
GAS LISTING /tmp/ccV7zWtX.s 			page 10


 288              		.globl	_ZN6Kernel3TCB8dispatchEv
 290              	_ZN6Kernel3TCB8dispatchEv:
 291              	.LFB42:
  54:src/tcb.cpp   ****         TCB *oldR = running;
 292              		.loc 1 54 26 is_stmt 1
 293              		.cfi_startproc
 294 01ac 130101FE 		addi	sp,sp,-32
 295              		.cfi_def_cfa_offset 32
 296 01b0 233C1100 		sd	ra,24(sp)
 297 01b4 23388100 		sd	s0,16(sp)
 298 01b8 23349100 		sd	s1,8(sp)
 299              		.cfi_offset 1, -8
 300              		.cfi_offset 8, -16
 301              		.cfi_offset 9, -24
 302 01bc 13040102 		addi	s0,sp,32
 303              		.cfi_def_cfa 8, 0
  55:src/tcb.cpp   ****         if(!oldR->isFinished() && !oldR->isBlocked()) {
 304              		.loc 1 55 9
  55:src/tcb.cpp   ****         if(!oldR->isFinished() && !oldR->isBlocked()) {
 305              		.loc 1 55 14 is_stmt 0
 306 01c0 97040000 		ld	s1,.LANCHOR0
 306      83B40400 
 307              	.LVL25:
  56:src/tcb.cpp   ****             Scheduler::put(oldR);
 308              		.loc 1 56 9 is_stmt 1
 309              	.LBB25:
 310              	.LBB26:
  19:src/../h/tcb.hpp ****   void setFinished(bool b) { finished = b; }
 311              		.loc 2 19 29
  19:src/../h/tcb.hpp ****   void setFinished(bool b) { finished = b; }
 312              		.loc 2 19 36 is_stmt 0
 313 01c8 83C78402 		lbu	a5,40(s1)
 314              	.LVL26:
 315              	.LBE26:
 316              	.LBE25:
  56:src/tcb.cpp   ****             Scheduler::put(oldR);
 317              		.loc 1 56 32
 318 01cc 63960700 		bnez	a5,.L14
 319              	.LVL27:
 320              	.LBB27:
 321              	.LBB28:
  21:src/../h/tcb.hpp **** 
  22:src/../h/tcb.hpp ****   static int getCntActiveT() { return cntActiveT; }
  23:src/../h/tcb.hpp **** 
  24:src/../h/tcb.hpp ****   //uint64 getTimeSlice() const { return timeSlice; }
  25:src/../h/tcb.hpp **** 
  26:src/../h/tcb.hpp ****   static TCB *running;
  27:src/../h/tcb.hpp ****   static TCB *oldRunning;
  28:src/../h/tcb.hpp **** 
  29:src/../h/tcb.hpp **** 
  30:src/../h/tcb.hpp ****   static void yield(TCB *oldT, TCB *newT);
  31:src/../h/tcb.hpp ****   static void dispatch();
  32:src/../h/tcb.hpp **** 
  33:src/../h/tcb.hpp ****   static TCB *createThread(Body body, void *arg, uint64 *stack); //*
  34:src/../h/tcb.hpp **** 
  35:src/../h/tcb.hpp ****   bool isBlocked() const { return blocked; }
 322              		.loc 2 35 28 is_stmt 1
GAS LISTING /tmp/ccV7zWtX.s 			page 11


 323              		.loc 2 35 35 is_stmt 0
 324 01d0 83C70404 		lbu	a5,64(s1)
 325              	.LVL28:
 326              	.LBE28:
 327              	.LBE27:
  56:src/tcb.cpp   ****             Scheduler::put(oldR);
 328              		.loc 1 56 32
 329 01d4 638E0702 		beqz	a5,.L17
 330              	.L14:
  59:src/tcb.cpp   **** 
 331              		.loc 1 59 9 is_stmt 1
  59:src/tcb.cpp   **** 
 332              		.loc 1 59 33 is_stmt 0
 333 01d8 97000000 		call	_ZN6Kernel9Scheduler3getEv@plt
 333      E7800000 
 334              	.LVL29:
 335 01e0 93050500 		mv	a1,a0
  59:src/tcb.cpp   **** 
 336              		.loc 1 59 17
 337 01e4 97070000 		sd	a0,.LANCHOR0,a5
 337      23B0A700 
  61:src/tcb.cpp   ****             yield(oldR, running);
 338              		.loc 1 61 9 is_stmt 1
 339 01ec 6388A400 		beq	s1,a0,.L13
  62:src/tcb.cpp   ****         }
 340              		.loc 1 62 13
  62:src/tcb.cpp   ****         }
 341              		.loc 1 62 18 is_stmt 0
 342 01f0 13850400 		mv	a0,s1
 343 01f4 97000000 		call	_ZN6Kernel3TCB5yieldEPS0_S1_
 343      E7800000 
 344              	.LVL30:
 345              	.L13:
  65:src/tcb.cpp   **** 
 346              		.loc 1 65 5
 347 01fc 83308101 		ld	ra,24(sp)
 348              		.cfi_remember_state
 349              		.cfi_restore 1
 350 0200 03340101 		ld	s0,16(sp)
 351              		.cfi_restore 8
 352              		.cfi_def_cfa 2, 32
 353 0204 83348100 		ld	s1,8(sp)
 354              		.cfi_restore 9
 355              	.LVL31:
 356 0208 13010102 		addi	sp,sp,32
 357              		.cfi_def_cfa_offset 0
 358 020c 67800000 		jr	ra
 359              	.LVL32:
 360              	.L17:
 361              		.cfi_restore_state
  57:src/tcb.cpp   ****         }
 362              		.loc 1 57 13 is_stmt 1
  57:src/tcb.cpp   ****         }
 363              		.loc 1 57 27 is_stmt 0
 364 0210 13850400 		mv	a0,s1
 365 0214 97000000 		call	_ZN6Kernel9Scheduler3putEPNS_3TCBE@plt
 365      E7800000 
GAS LISTING /tmp/ccV7zWtX.s 			page 12


 366              	.LVL33:
 367 021c 6FF0DFFB 		j	.L14
 368              		.cfi_endproc
 369              	.LFE42:
 371              		.align	2
 372              		.globl	_ZN6Kernel3TCBnwEm
 374              	_ZN6Kernel3TCBnwEm:
 375              	.LFB45:
  73:src/tcb.cpp   **** 
  74:src/tcb.cpp   **** 
  75:src/tcb.cpp   ****     TCB *TCB::createThread(Body body, void *arg, uint64 *stack) {
  76:src/tcb.cpp   ****         return new TCB(body, arg, stack);
  77:src/tcb.cpp   ****     }
  78:src/tcb.cpp   **** 
  79:src/tcb.cpp   **** 
  80:src/tcb.cpp   ****     void *TCB::operator new(uint64 s) {
 376              		.loc 1 80 39 is_stmt 1
 377              		.cfi_startproc
 378              	.LVL34:
 379 0220 130101FF 		addi	sp,sp,-16
 380              		.cfi_def_cfa_offset 16
 381 0224 23341100 		sd	ra,8(sp)
 382 0228 23308100 		sd	s0,0(sp)
 383              		.cfi_offset 1, -8
 384              		.cfi_offset 8, -16
 385 022c 13040101 		addi	s0,sp,16
 386              		.cfi_def_cfa 8, 0
  81:src/tcb.cpp   ****         return MemoryAllocator::__mem__alloc(Riscv::roundToBlks(s));
 387              		.loc 1 81 9
 388              	.LVL35:
 389              	.LBB29:
 390              	.LBB30:
  94:src/../h/../h/riscv.hpp ****     return size/MEM_BLOCK_SIZE + (size%MEM_BLOCK_SIZE ? 1 : 0);
 391              		.loc 3 94 5
  94:src/../h/../h/riscv.hpp ****     return size/MEM_BLOCK_SIZE + (size%MEM_BLOCK_SIZE ? 1 : 0);
 392              		.loc 3 94 10 is_stmt 0
 393 0230 13050501 		addi	a0,a0,16
 394              	.LVL36:
 395              		.loc 3 95 5 is_stmt 1
 396              		.loc 3 95 16 is_stmt 0
 397 0234 93576500 		srli	a5,a0,6
 398              		.loc 3 95 39
 399 0238 1375F503 		andi	a0,a0,63
 400              	.LVL37:
 401              		.loc 3 95 55
 402 023c 63040500 		beqz	a0,.L19
 403 0240 13051000 		li	a0,1
 404              	.L19:
 405              	.LVL38:
 406              	.LBE30:
 407              	.LBE29:
 408              		.loc 1 81 45
 409 0244 3385A700 		add	a0,a5,a0
 410 0248 97000000 		call	_ZN6Kernel15MemoryAllocator12__mem__allocEm@plt
 410      E7800000 
 411              	.LVL39:
  82:src/tcb.cpp   ****     }
GAS LISTING /tmp/ccV7zWtX.s 			page 13


 412              		.loc 1 82 5
 413 0250 83308100 		ld	ra,8(sp)
 414              		.cfi_restore 1
 415 0254 03340100 		ld	s0,0(sp)
 416              		.cfi_restore 8
 417              		.cfi_def_cfa 2, 16
 418 0258 13010101 		addi	sp,sp,16
 419              		.cfi_def_cfa_offset 0
 420 025c 67800000 		jr	ra
 421              		.cfi_endproc
 422              	.LFE45:
 424              		.align	2
 425              		.globl	_ZN6Kernel3TCBnaEm
 427              	_ZN6Kernel3TCBnaEm:
 428              	.LFB46:
  83:src/tcb.cpp   **** 
  84:src/tcb.cpp   ****     void *TCB::operator new [](uint64 s) {
 429              		.loc 1 84 42 is_stmt 1
 430              		.cfi_startproc
 431              	.LVL40:
 432 0260 130101FF 		addi	sp,sp,-16
 433              		.cfi_def_cfa_offset 16
 434 0264 23341100 		sd	ra,8(sp)
 435 0268 23308100 		sd	s0,0(sp)
 436              		.cfi_offset 1, -8
 437              		.cfi_offset 8, -16
 438 026c 13040101 		addi	s0,sp,16
 439              		.cfi_def_cfa 8, 0
  85:src/tcb.cpp   ****         return MemoryAllocator::__mem__alloc(Riscv::roundToBlks(s));
 440              		.loc 1 85 9
 441              	.LVL41:
 442              	.LBB31:
 443              	.LBB32:
  94:src/../h/../h/riscv.hpp ****     return size/MEM_BLOCK_SIZE + (size%MEM_BLOCK_SIZE ? 1 : 0);
 444              		.loc 3 94 5
  94:src/../h/../h/riscv.hpp ****     return size/MEM_BLOCK_SIZE + (size%MEM_BLOCK_SIZE ? 1 : 0);
 445              		.loc 3 94 10 is_stmt 0
 446 0270 13050501 		addi	a0,a0,16
 447              	.LVL42:
 448              		.loc 3 95 5 is_stmt 1
 449              		.loc 3 95 16 is_stmt 0
 450 0274 93576500 		srli	a5,a0,6
 451              		.loc 3 95 39
 452 0278 1375F503 		andi	a0,a0,63
 453              	.LVL43:
 454              		.loc 3 95 55
 455 027c 63040500 		beqz	a0,.L22
 456 0280 13051000 		li	a0,1
 457              	.L22:
 458              	.LVL44:
 459              	.LBE32:
 460              	.LBE31:
 461              		.loc 1 85 45
 462 0284 3385A700 		add	a0,a5,a0
 463 0288 97000000 		call	_ZN6Kernel15MemoryAllocator12__mem__allocEm@plt
 463      E7800000 
 464              	.LVL45:
GAS LISTING /tmp/ccV7zWtX.s 			page 14


  86:src/tcb.cpp   ****     }
 465              		.loc 1 86 5
 466 0290 83308100 		ld	ra,8(sp)
 467              		.cfi_restore 1
 468 0294 03340100 		ld	s0,0(sp)
 469              		.cfi_restore 8
 470              		.cfi_def_cfa 2, 16
 471 0298 13010101 		addi	sp,sp,16
 472              		.cfi_def_cfa_offset 0
 473 029c 67800000 		jr	ra
 474              		.cfi_endproc
 475              	.LFE46:
 477              		.align	2
 478              		.globl	_ZN6Kernel3TCBdlEPv
 480              	_ZN6Kernel3TCBdlEPv:
 481              	.LFB47:
  87:src/tcb.cpp   **** 
  88:src/tcb.cpp   ****     void TCB::operator delete(void *p) noexcept {
 482              		.loc 1 88 49 is_stmt 1
 483              		.cfi_startproc
 484              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 485              		.cfi_lsda 0x1b,.LLSDA47
 486              	.LVL46:
 487 02a0 130101FF 		addi	sp,sp,-16
 488              		.cfi_def_cfa_offset 16
 489 02a4 23341100 		sd	ra,8(sp)
 490 02a8 23308100 		sd	s0,0(sp)
 491              		.cfi_offset 1, -8
 492              		.cfi_offset 8, -16
 493 02ac 13040101 		addi	s0,sp,16
 494              		.cfi_def_cfa 8, 0
  89:src/tcb.cpp   ****         MemoryAllocator::__mem__free(p);
 495              		.loc 1 89 9
 496              		.loc 1 89 37 is_stmt 0
 497 02b0 97000000 		call	_ZN6Kernel15MemoryAllocator11__mem__freeEPv@plt
 497      E7800000 
 498              	.LVL47:
  90:src/tcb.cpp   ****     }
 499              		.loc 1 90 5
 500 02b8 83308100 		ld	ra,8(sp)
 501              		.cfi_restore 1
 502 02bc 03340100 		ld	s0,0(sp)
 503              		.cfi_restore 8
 504              		.cfi_def_cfa 2, 16
 505 02c0 13010101 		addi	sp,sp,16
 506              		.cfi_def_cfa_offset 0
 507 02c4 67800000 		jr	ra
 508              		.cfi_endproc
 509              	.LFE47:
 510              		.section	.gcc_except_table
 511              	.LLSDA47:
 512 0004 FF       		.byte	0xff
 513 0005 FF       		.byte	0xff
 514 0006 03       		.byte	0x3
 515 0007 00       		.byte	0
 516              		.text
 518              		.align	2
GAS LISTING /tmp/ccV7zWtX.s 			page 15


 519              		.globl	_ZN6Kernel3TCB12createThreadEPFvPvES1_Pm
 521              	_ZN6Kernel3TCB12createThreadEPFvPvES1_Pm:
 522              	.LFB44:
  75:src/tcb.cpp   ****         return new TCB(body, arg, stack);
 523              		.loc 1 75 65 is_stmt 1
 524              		.cfi_startproc
 525              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 526              		.cfi_lsda 0x1b,.LLSDA44
 527              	.LVL48:
 528 02c8 130101FD 		addi	sp,sp,-48
 529              		.cfi_def_cfa_offset 48
 530 02cc 23341102 		sd	ra,40(sp)
 531 02d0 23308102 		sd	s0,32(sp)
 532 02d4 233C9100 		sd	s1,24(sp)
 533 02d8 23382101 		sd	s2,16(sp)
 534 02dc 23343101 		sd	s3,8(sp)
 535 02e0 23304101 		sd	s4,0(sp)
 536              		.cfi_offset 1, -8
 537              		.cfi_offset 8, -16
 538              		.cfi_offset 9, -24
 539              		.cfi_offset 18, -32
 540              		.cfi_offset 19, -40
 541              		.cfi_offset 20, -48
 542 02e4 13040103 		addi	s0,sp,48
 543              		.cfi_def_cfa 8, 0
 544 02e8 13090500 		mv	s2,a0
 545 02ec 93890500 		mv	s3,a1
 546 02f0 130A0600 		mv	s4,a2
  76:src/tcb.cpp   ****     }
 547              		.loc 1 76 9
  76:src/tcb.cpp   ****     }
 548              		.loc 1 76 40 is_stmt 0
 549 02f4 13058004 		li	a0,72
 550              	.LVL49:
 551              	.LEHB0:
 552 02f8 97000000 		call	_ZN6Kernel3TCBnwEm
 552      E7800000 
 553              	.LVL50:
 554              	.LEHE0:
 555 0300 93040500 		mv	s1,a0
 556 0304 93060A00 		mv	a3,s4
 557 0308 13860900 		mv	a2,s3
 558 030c 93050900 		mv	a1,s2
 559              	.LEHB1:
 560 0310 97000000 		call	_ZN6Kernel3TCBC1EPFvPvES1_Pm
 560      E7800000 
 561              	.LVL51:
 562              	.LEHE1:
 563 0318 6F000002 		j	.L31
 564              	.L28:
 565 031c 13090500 		mv	s2,a0
 566              	.LVL52:
 567 0320 13850400 		mv	a0,s1
 568 0324 97000000 		call	_ZN6Kernel3TCBdlEPv
 568      E7800000 
 569              	.LVL53:
 570 032c 13050900 		mv	a0,s2
GAS LISTING /tmp/ccV7zWtX.s 			page 16


 571              	.LEHB2:
 572 0330 97000000 		call	_Unwind_Resume@plt
 572      E7800000 
 573              	.LVL54:
 574              	.LEHE2:
 575              	.L31:
  77:src/tcb.cpp   **** 
 576              		.loc 1 77 5
 577 0338 13850400 		mv	a0,s1
 578 033c 83308102 		ld	ra,40(sp)
 579              		.cfi_restore 1
 580 0340 03340102 		ld	s0,32(sp)
 581              		.cfi_restore 8
 582              		.cfi_def_cfa 2, 48
 583 0344 83348101 		ld	s1,24(sp)
 584              		.cfi_restore 9
 585 0348 03390101 		ld	s2,16(sp)
 586              		.cfi_restore 18
 587              	.LVL55:
 588 034c 83398100 		ld	s3,8(sp)
 589              		.cfi_restore 19
 590              	.LVL56:
 591 0350 033A0100 		ld	s4,0(sp)
 592              		.cfi_restore 20
 593              	.LVL57:
 594 0354 13010103 		addi	sp,sp,48
 595              		.cfi_def_cfa_offset 0
 596 0358 67800000 		jr	ra
 597              		.cfi_endproc
 598              	.LFE44:
 599              		.section	.gcc_except_table
 600              	.LLSDA44:
 601 0008 FF       		.byte	0xff
 602 0009 FF       		.byte	0xff
 603 000a 03       		.byte	0x3
 604 000b 27       		.byte	0x27
 605 000c 00000000 		.4byte	.LEHB0-.LFB44
 606 0010 00000000 		.4byte	.LEHE0-.LEHB0
 607 0014 00000000 		.4byte	0
 608 0018 00       		.byte	0
 609 0019 00000000 		.4byte	.LEHB1-.LFB44
 610 001d 00000000 		.4byte	.LEHE1-.LEHB1
 611 0021 00000000 		.4byte	.L28-.LFB44
 612 0025 00       		.byte	0
 613 0026 00000000 		.4byte	.LEHB2-.LFB44
 614 002a 00000000 		.4byte	.LEHE2-.LEHB2
 615 002e 00000000 		.4byte	0
 616 0032 00       		.byte	0
 617              		.text
 619              		.align	2
 620              		.globl	_ZN6Kernel3TCBdaEPv
 622              	_ZN6Kernel3TCBdaEPv:
 623              	.LFB48:
  91:src/tcb.cpp   **** 
  92:src/tcb.cpp   ****     void TCB::operator delete [](void *p) noexcept {
 624              		.loc 1 92 52 is_stmt 1
 625              		.cfi_startproc
GAS LISTING /tmp/ccV7zWtX.s 			page 17


 626              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 627              		.cfi_lsda 0x1b,.LLSDA48
 628              	.LVL58:
 629 035c 130101FF 		addi	sp,sp,-16
 630              		.cfi_def_cfa_offset 16
 631 0360 23341100 		sd	ra,8(sp)
 632 0364 23308100 		sd	s0,0(sp)
 633              		.cfi_offset 1, -8
 634              		.cfi_offset 8, -16
 635 0368 13040101 		addi	s0,sp,16
 636              		.cfi_def_cfa 8, 0
  93:src/tcb.cpp   ****         MemoryAllocator::__mem__free(p);
 637              		.loc 1 93 9
 638              		.loc 1 93 37 is_stmt 0
 639 036c 97000000 		call	_ZN6Kernel15MemoryAllocator11__mem__freeEPv@plt
 639      E7800000 
 640              	.LVL59:
  94:src/tcb.cpp   ****     }
 641              		.loc 1 94 5
 642 0374 83308100 		ld	ra,8(sp)
 643              		.cfi_restore 1
 644 0378 03340100 		ld	s0,0(sp)
 645              		.cfi_restore 8
 646              		.cfi_def_cfa 2, 16
 647 037c 13010101 		addi	sp,sp,16
 648              		.cfi_def_cfa_offset 0
 649 0380 67800000 		jr	ra
 650              		.cfi_endproc
 651              	.LFE48:
 652              		.section	.gcc_except_table
 653              	.LLSDA48:
 654 0033 FF       		.byte	0xff
 655 0034 FF       		.byte	0xff
 656 0035 03       		.byte	0x3
 657 0036 00       		.byte	0
 658              		.text
 660              		.align	2
 661              		.globl	_ZN6Kernel3TCB7superSPEm
 663              	_ZN6Kernel3TCB7superSPEm:
 664              	.LFB49:
  95:src/tcb.cpp   **** 
  96:src/tcb.cpp   ****     uint64 TCB::superSP(uint64 sp) {
 665              		.loc 1 96 36 is_stmt 1
 666              		.cfi_startproc
 667              	.LVL60:
 668 0384 130101FE 		addi	sp,sp,-32
 669              		.cfi_def_cfa_offset 32
 670 0388 233C8100 		sd	s0,24(sp)
 671              		.cfi_offset 8, -8
 672 038c 13040102 		addi	s0,sp,32
 673              		.cfi_def_cfa 8, 0
  97:src/tcb.cpp   ****         if((Riscv::r_sstatus() & Riscv::SSTATUS_SPP)==0) { //ako smo presli na neki sistemski stek,
 674              		.loc 1 97 9
 675              	.LBB33:
 676              	.LBB34:
  96:src/../h/../h/riscv.hpp **** }
  97:src/../h/../h/riscv.hpp **** 
GAS LISTING /tmp/ccV7zWtX.s 			page 18


  98:src/../h/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  99:src/../h/../h/riscv.hpp **** {
 100:src/../h/../h/riscv.hpp ****     uint64 volatile scause;
 101:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 102:src/../h/../h/riscv.hpp ****     return scause;
 103:src/../h/../h/riscv.hpp **** }
 104:src/../h/../h/riscv.hpp **** 
 105:src/../h/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 106:src/../h/../h/riscv.hpp **** {
 107:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 108:src/../h/../h/riscv.hpp **** }
 109:src/../h/../h/riscv.hpp **** 
 110:src/../h/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 111:src/../h/../h/riscv.hpp **** {
 112:src/../h/../h/riscv.hpp ****     uint64 volatile sepc;
 113:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 114:src/../h/../h/riscv.hpp ****     return sepc;
 115:src/../h/../h/riscv.hpp **** }
 116:src/../h/../h/riscv.hpp **** 
 117:src/../h/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 118:src/../h/../h/riscv.hpp **** {
 119:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 120:src/../h/../h/riscv.hpp **** }
 121:src/../h/../h/riscv.hpp **** 
 122:src/../h/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 123:src/../h/../h/riscv.hpp **** {
 124:src/../h/../h/riscv.hpp ****     uint64 volatile stvec;
 125:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 126:src/../h/../h/riscv.hpp ****     return stvec;
 127:src/../h/../h/riscv.hpp **** }
 128:src/../h/../h/riscv.hpp **** 
 129:src/../h/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 130:src/../h/../h/riscv.hpp **** {
 131:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 132:src/../h/../h/riscv.hpp **** }
 133:src/../h/../h/riscv.hpp **** 
 134:src/../h/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 135:src/../h/../h/riscv.hpp **** {
 136:src/../h/../h/riscv.hpp ****     uint64 volatile stval;
 137:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 138:src/../h/../h/riscv.hpp ****     return stval;
 139:src/../h/../h/riscv.hpp **** }
 140:src/../h/../h/riscv.hpp **** 
 141:src/../h/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 142:src/../h/../h/riscv.hpp **** {
 143:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 144:src/../h/../h/riscv.hpp **** }
 145:src/../h/../h/riscv.hpp **** 
 146:src/../h/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 147:src/../h/../h/riscv.hpp **** {
 148:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 149:src/../h/../h/riscv.hpp **** }
 150:src/../h/../h/riscv.hpp **** 
 151:src/../h/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 152:src/../h/../h/riscv.hpp **** {
 153:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 154:src/../h/../h/riscv.hpp **** }
GAS LISTING /tmp/ccV7zWtX.s 			page 19


 155:src/../h/../h/riscv.hpp **** 
 156:src/../h/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 157:src/../h/../h/riscv.hpp **** {
 158:src/../h/../h/riscv.hpp ****     uint64 volatile sip;
 159:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 160:src/../h/../h/riscv.hpp ****     return sip;
 161:src/../h/../h/riscv.hpp **** }
 162:src/../h/../h/riscv.hpp **** 
 163:src/../h/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 164:src/../h/../h/riscv.hpp **** {
 165:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 166:src/../h/../h/riscv.hpp **** }
 167:src/../h/../h/riscv.hpp **** 
 168:src/../h/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 169:src/../h/../h/riscv.hpp **** {
 170:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 171:src/../h/../h/riscv.hpp **** }
 172:src/../h/../h/riscv.hpp **** 
 173:src/../h/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 174:src/../h/../h/riscv.hpp **** {
 175:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 176:src/../h/../h/riscv.hpp **** }
 177:src/../h/../h/riscv.hpp **** 
 178:src/../h/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 179:src/../h/../h/riscv.hpp **** {
 180:src/../h/../h/riscv.hpp ****     uint64 volatile sstatus;
 677              		.loc 3 180 5
 181:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 678              		.loc 3 181 5
 679              		.loc 3 181 76 is_stmt 0
 680              	#APP
 681              	# 181 "src/../h/../h/riscv.hpp" 1
 182              	    return sstatus;
 682              		csrr a5, sstatus
 683              	# 0 "" 2
 684              	#NO_APP
 685 0394 2334F4FE 		sd	a5,-24(s0)
 686              		.loc 3 182 5 is_stmt 1
 687              		.loc 3 182 12 is_stmt 0
 688 0398 833784FE 		ld	a5,-24(s0)
 689              	.LBE34:
 690              	.LBE33:
 691              		.loc 1 97 32
 692 039c 93F70710 		andi	a5,a5,256
 693              		.loc 1 97 9
 694 03a0 639E0700 		bnez	a5,.L35
  98:src/tcb.cpp   ****             running->savedSP = sp;
 695              		.loc 1 98 13 is_stmt 1
 696              		.loc 1 98 22 is_stmt 0
 697 03a4 97070000 		ld	a5,.LANCHOR0
 697      83B70700 
 698              		.loc 1 98 30
 699 03ac 23BCA702 		sd	a0,56(a5)
  99:src/tcb.cpp   ****             return ((uint64) &(running->Sstack[DEFAULT_STACK_SIZE]));
 700              		.loc 1 99 13 is_stmt 1
 701              		.loc 1 99 41 is_stmt 0
 702 03b0 03B50703 		ld	a0,48(a5)
GAS LISTING /tmp/ccV7zWtX.s 			page 20


 703              	.LVL61:
 704              		.loc 1 99 30
 705 03b4 B7870000 		li	a5,32768
 706              	.LVL62:
 707 03b8 3305F500 		add	a0,a0,a5
 708              	.LVL63:
 709              	.L35:
 100:src/tcb.cpp   ****         } else {
 101:src/tcb.cpp   ****             return sp;
 102:src/tcb.cpp   ****         }
 103:src/tcb.cpp   **** 
 104:src/tcb.cpp   ****     }
 710              		.loc 1 104 5
 711 03bc 03348101 		ld	s0,24(sp)
 712              		.cfi_restore 8
 713              		.cfi_def_cfa 2, 32
 714 03c0 13010102 		addi	sp,sp,32
 715              		.cfi_def_cfa_offset 0
 716 03c4 67800000 		jr	ra
 717              		.cfi_endproc
 718              	.LFE49:
 720              		.align	2
 721              		.globl	_ZN6Kernel3TCB6userSPEm
 723              	_ZN6Kernel3TCB6userSPEm:
 724              	.LFB50:
 105:src/tcb.cpp   **** 
 106:src/tcb.cpp   ****     uint64 TCB::userSP(uint64 sp) {
 725              		.loc 1 106 35 is_stmt 1
 726              		.cfi_startproc
 727              	.LVL64:
 728 03c8 130101FE 		addi	sp,sp,-32
 729              		.cfi_def_cfa_offset 32
 730 03cc 233C8100 		sd	s0,24(sp)
 731              		.cfi_offset 8, -8
 732 03d0 13040102 		addi	s0,sp,32
 733              		.cfi_def_cfa 8, 0
 107:src/tcb.cpp   ****         if((Riscv::r_sstatus() & Riscv::SSTATUS_SPP)==0) {
 734              		.loc 1 107 9
 735              	.LBB35:
 736              	.LBB36:
 180:src/../h/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 737              		.loc 3 180 5
 181:src/../h/../h/riscv.hpp ****     return sstatus;
 738              		.loc 3 181 5
 181:src/../h/../h/riscv.hpp ****     return sstatus;
 739              		.loc 3 181 76 is_stmt 0
 740              	#APP
 741              	# 181 "src/../h/../h/riscv.hpp" 1
 742              		csrr a5, sstatus
 743              	# 0 "" 2
 744              	#NO_APP
 745 03d8 2334F4FE 		sd	a5,-24(s0)
 746              		.loc 3 182 5 is_stmt 1
 747              		.loc 3 182 12 is_stmt 0
 748 03dc 833784FE 		ld	a5,-24(s0)
 749              	.LBE36:
 750              	.LBE35:
GAS LISTING /tmp/ccV7zWtX.s 			page 21


 751              		.loc 1 107 32
 752 03e0 93F70710 		andi	a5,a5,256
 753              		.loc 1 107 9
 754 03e4 63980700 		bnez	a5,.L38
 108:src/tcb.cpp   ****             return running->savedSP; // sacuvani korisnicki
 755              		.loc 1 108 13 is_stmt 1
 756              		.loc 1 108 29 is_stmt 0
 757 03e8 97070000 		ld	a5,.LANCHOR0
 757      83B70700 
 758 03f0 03B58703 		ld	a0,56(a5)
 759              	.LVL65:
 760              	.L38:
 109:src/tcb.cpp   ****         } else
 110:src/tcb.cpp   ****             return sp;
 111:src/tcb.cpp   ****     }
 761              		.loc 1 111 5
 762 03f4 03348101 		ld	s0,24(sp)
 763              		.cfi_restore 8
 764              		.cfi_def_cfa 2, 32
 765 03f8 13010102 		addi	sp,sp,32
 766              		.cfi_def_cfa_offset 0
 767 03fc 67800000 		jr	ra
 768              		.cfi_endproc
 769              	.LFE50:
 771              		.globl	_ZN6Kernel3TCB10cntActiveTE
 772              		.globl	_ZN6Kernel3TCB10oldRunningE
 773              		.globl	_ZN6Kernel3TCB7runningE
 774              		.data
 775              		.align	2
 776              		.set	.LANCHOR1,. + 0
 779              	_ZN6Kernel3TCB10cntActiveTE:
 780 0000 01000000 		.word	1
 781              		.bss
 782              		.align	3
 783              		.set	.LANCHOR0,. + 0
 786              	_ZN6Kernel3TCB7runningE:
 787 0000 00000000 		.zero	8
 787      00000000 
 790              	_ZN6Kernel3TCB10oldRunningE:
 791 0008 00000000 		.zero	8
 791      00000000 
 792              		.text
 793              	.Letext0:
 794              		.file 4 "src/../h/../lib/hw.h"
 795              		.file 5 "src/../h/../h/../h/memoryallocator.hpp"
 796              		.file 6 "src/../h/scheduler.hpp"
 797              		.file 7 "src/../h/syscall_c.h"
 4075              		.align	3
 4078              	DW.ref.__gxx_personality_v0:
 4079 0000 00000000 		.dword	__gxx_personality_v0
 4079      00000000 
 4080              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 4081              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccV7zWtX.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcb.cpp
     /tmp/ccV7zWtX.s:9      .text:0000000000000000 _ZN6Kernel3TCB10thrWrapperEv
     /tmp/ccV7zWtX.s:13     .text:0000000000000000 .L0 
     /tmp/ccV7zWtX.s:14     .text:0000000000000000 .L0 
     /tmp/ccV7zWtX.s:15     .text:0000000000000004 .L0 
     /tmp/ccV7zWtX.s:19     .text:0000000000000010 .L0 
     /tmp/ccV7zWtX.s:20     .text:0000000000000010 .L0 
     /tmp/ccV7zWtX.s:21     .text:0000000000000010 .L0 
     /tmp/ccV7zWtX.s:23     .text:0000000000000014 .L0 
     /tmp/ccV7zWtX.s:25     .text:0000000000000014 .L0 
     /tmp/ccV7zWtX.s:26     .text:0000000000000014 .L0 
     /tmp/ccV7zWtX.s:29     .text:000000000000001c .L0 
     /tmp/ccV7zWtX.s:30     .text:000000000000001c .L0 
     /tmp/ccV7zWtX.s:34     .text:000000000000002c .L0 
     /tmp/ccV7zWtX.s:38     .text:0000000000000034 .L0 
     /tmp/ccV7zWtX.s:39     .text:0000000000000034 .L0 
     /tmp/ccV7zWtX.s:45     .text:0000000000000038 .L0 
     /tmp/ccV7zWtX.s:46     .text:0000000000000038 .L0 
     /tmp/ccV7zWtX.s:52     .text:0000000000000040 .L0 
     /tmp/ccV7zWtX.s:53     .text:0000000000000040 .L0 
     /tmp/ccV7zWtX.s:56     .text:0000000000000048 .L0 
     /tmp/ccV7zWtX.s:57     .text:000000000000004c .L0 
     /tmp/ccV7zWtX.s:59     .text:0000000000000050 .L0 
     /tmp/ccV7zWtX.s:60     .text:0000000000000050 .L0 
     /tmp/ccV7zWtX.s:62     .text:0000000000000054 .L0 
     /tmp/ccV7zWtX.s:64     .text:0000000000000058 .L0 
     /tmp/ccV7zWtX.s:66     .text:000000000000005c .L0 
     /tmp/ccV7zWtX.s:72     .text:000000000000005c _ZN6Kernel3TCBC2EPFvPvES1_Pm
     /tmp/ccV7zWtX.s:75     .text:000000000000005c .L0 
     /tmp/ccV7zWtX.s:77     .text:000000000000005c .L0 
     /tmp/ccV7zWtX.s:78     .text:0000000000000060 .L0 
     /tmp/ccV7zWtX.s:82     .text:000000000000006c .L0 
     /tmp/ccV7zWtX.s:83     .text:000000000000006c .L0 
     /tmp/ccV7zWtX.s:84     .text:000000000000006c .L0 
     /tmp/ccV7zWtX.s:86     .text:0000000000000070 .L0 
     /tmp/ccV7zWtX.s:90     .text:0000000000000074 .L0 
     /tmp/ccV7zWtX.s:96     .text:000000000000008c .L0 
     /tmp/ccV7zWtX.s:98     .text:0000000000000090 .L0 
     /tmp/ccV7zWtX.s:103    .text:0000000000000098 .L0 
     /tmp/ccV7zWtX.s:107    .text:00000000000000a4 .L0 
     /tmp/ccV7zWtX.s:112    .text:00000000000000a8 .L0 
     /tmp/ccV7zWtX.s:113    .text:00000000000000a8 .L0 
     /tmp/ccV7zWtX.s:115    .text:00000000000000a8 .L0 
     /tmp/ccV7zWtX.s:116    .text:00000000000000a8 .L0 
     /tmp/ccV7zWtX.s:121    .text:00000000000000b4 .L0 
     /tmp/ccV7zWtX.s:123    .text:00000000000000b8 .L0 
     /tmp/ccV7zWtX.s:124    .text:00000000000000b8 .L0 
     /tmp/ccV7zWtX.s:129    .text:00000000000000cc .L0 
     /tmp/ccV7zWtX.s:130    .text:00000000000000cc .L0 
     /tmp/ccV7zWtX.s:136    .text:00000000000000d8 .L0 
     /tmp/ccV7zWtX.s:137    .text:00000000000000dc .L0 
     /tmp/ccV7zWtX.s:138    .text:00000000000000dc .L0 
     /tmp/ccV7zWtX.s:140    .text:00000000000000e0 .L0 
     /tmp/ccV7zWtX.s:141    .text:00000000000000e0 .L0 
     /tmp/ccV7zWtX.s:143    .text:00000000000000e4 .L0 
     /tmp/ccV7zWtX.s:146    .text:00000000000000e8 .L0 
GAS LISTING /tmp/ccV7zWtX.s 			page 23


     /tmp/ccV7zWtX.s:150    .text:00000000000000ec .L0 
     /tmp/ccV7zWtX.s:153    .text:00000000000000ec .L0 
     /tmp/ccV7zWtX.s:157    .text:00000000000000f4 .L0 
     /tmp/ccV7zWtX.s:72     .text:000000000000005c _ZN6Kernel3TCBC1EPFvPvES1_Pm
     /tmp/ccV7zWtX.s:165    .text:00000000000000f4 _ZN6Kernel3TCBD2Ev
     /tmp/ccV7zWtX.s:168    .text:00000000000000f4 .L0 
     /tmp/ccV7zWtX.s:4078   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccV7zWtX.s:172    .text:00000000000000f4 .L0 
     /tmp/ccV7zWtX.s:173    .text:00000000000000f8 .L0 
     /tmp/ccV7zWtX.s:177    .text:0000000000000104 .L0 
     /tmp/ccV7zWtX.s:178    .text:0000000000000104 .L0 
     /tmp/ccV7zWtX.s:179    .text:0000000000000104 .L0 
     /tmp/ccV7zWtX.s:181    .text:0000000000000108 .L0 
     /tmp/ccV7zWtX.s:185    .text:000000000000010c .L0 
     /tmp/ccV7zWtX.s:186    .text:000000000000010c .L0 
     /tmp/ccV7zWtX.s:188    .text:0000000000000110 .L0 
     /tmp/ccV7zWtX.s:190    .text:0000000000000114 .L0 
     /tmp/ccV7zWtX.s:191    .text:0000000000000114 .L0 
     /tmp/ccV7zWtX.s:197    .text:0000000000000128 .L0 
     /tmp/ccV7zWtX.s:198    .text:0000000000000128 .L0 
     /tmp/ccV7zWtX.s:203    .text:0000000000000134 .L0 
     /tmp/ccV7zWtX.s:204    .text:0000000000000134 .L0 
     /tmp/ccV7zWtX.s:209    .text:0000000000000140 .L0 
     /tmp/ccV7zWtX.s:210    .text:0000000000000144 .L0 
     /tmp/ccV7zWtX.s:212    .text:0000000000000148 .L0 
     /tmp/ccV7zWtX.s:213    .text:0000000000000148 .L0 
     /tmp/ccV7zWtX.s:215    .text:000000000000014c .L0 
     /tmp/ccV7zWtX.s:218    .text:0000000000000150 .L0 
     /tmp/ccV7zWtX.s:220    .text:0000000000000154 .L0 
     /tmp/ccV7zWtX.s:165    .text:00000000000000f4 _ZN6Kernel3TCBD1Ev
     /tmp/ccV7zWtX.s:236    .text:0000000000000154 _ZN6Kernel3TCB5yieldEPS0_S1_
     /tmp/ccV7zWtX.s:239    .text:0000000000000154 .L0 
     /tmp/ccV7zWtX.s:241    .text:0000000000000154 .L0 
     /tmp/ccV7zWtX.s:242    .text:0000000000000158 .L0 
     /tmp/ccV7zWtX.s:247    .text:0000000000000168 .L0 
     /tmp/ccV7zWtX.s:248    .text:0000000000000168 .L0 
     /tmp/ccV7zWtX.s:249    .text:0000000000000168 .L0 
     /tmp/ccV7zWtX.s:250    .text:0000000000000168 .L0 
     /tmp/ccV7zWtX.s:252    .text:000000000000016c .L0 
     /tmp/ccV7zWtX.s:256    .text:0000000000000174 .L0 
     /tmp/ccV7zWtX.s:257    .text:0000000000000174 .L0 
     /tmp/ccV7zWtX.s:260    .text:000000000000017c .L0 
     /tmp/ccV7zWtX.s:261    .text:000000000000017c .L0 
     /tmp/ccV7zWtX.s:266    .text:000000000000018c .L0 
     /tmp/ccV7zWtX.s:267    .text:000000000000018c .L0 
     /tmp/ccV7zWtX.s:270    .text:0000000000000194 .L0 
     /tmp/ccV7zWtX.s:271    .text:0000000000000198 .L0 
     /tmp/ccV7zWtX.s:273    .text:000000000000019c .L0 
     /tmp/ccV7zWtX.s:274    .text:000000000000019c .L0 
     /tmp/ccV7zWtX.s:276    .text:00000000000001a0 .L0 
     /tmp/ccV7zWtX.s:279    .text:00000000000001a4 .L0 
     /tmp/ccV7zWtX.s:282    .text:00000000000001a8 .L0 
     /tmp/ccV7zWtX.s:284    .text:00000000000001ac .L0 
     /tmp/ccV7zWtX.s:290    .text:00000000000001ac _ZN6Kernel3TCB8dispatchEv
     /tmp/ccV7zWtX.s:293    .text:00000000000001ac .L0 
     /tmp/ccV7zWtX.s:294    .text:00000000000001ac .L0 
     /tmp/ccV7zWtX.s:295    .text:00000000000001b0 .L0 
GAS LISTING /tmp/ccV7zWtX.s 			page 24


     /tmp/ccV7zWtX.s:299    .text:00000000000001bc .L0 
     /tmp/ccV7zWtX.s:300    .text:00000000000001bc .L0 
     /tmp/ccV7zWtX.s:301    .text:00000000000001bc .L0 
     /tmp/ccV7zWtX.s:303    .text:00000000000001c0 .L0 
     /tmp/ccV7zWtX.s:305    .text:00000000000001c0 .L0 
     /tmp/ccV7zWtX.s:306    .text:00000000000001c0 .L0 
     /tmp/ccV7zWtX.s:311    .text:00000000000001c8 .L0 
     /tmp/ccV7zWtX.s:312    .text:00000000000001c8 .L0 
     /tmp/ccV7zWtX.s:313    .text:00000000000001c8 .L0 
     /tmp/ccV7zWtX.s:318    .text:00000000000001cc .L0 
     /tmp/ccV7zWtX.s:323    .text:00000000000001d0 .L0 
     /tmp/ccV7zWtX.s:324    .text:00000000000001d0 .L0 
     /tmp/ccV7zWtX.s:329    .text:00000000000001d4 .L0 
     /tmp/ccV7zWtX.s:332    .text:00000000000001d8 .L0 
     /tmp/ccV7zWtX.s:333    .text:00000000000001d8 .L0 
     /tmp/ccV7zWtX.s:337    .text:00000000000001e4 .L0 
     /tmp/ccV7zWtX.s:339    .text:00000000000001ec .L0 
     /tmp/ccV7zWtX.s:341    .text:00000000000001f0 .L0 
     /tmp/ccV7zWtX.s:342    .text:00000000000001f0 .L0 
     /tmp/ccV7zWtX.s:347    .text:00000000000001fc .L0 
     /tmp/ccV7zWtX.s:348    .text:0000000000000200 .L0 
     /tmp/ccV7zWtX.s:349    .text:0000000000000200 .L0 
     /tmp/ccV7zWtX.s:351    .text:0000000000000204 .L0 
     /tmp/ccV7zWtX.s:352    .text:0000000000000204 .L0 
     /tmp/ccV7zWtX.s:354    .text:0000000000000208 .L0 
     /tmp/ccV7zWtX.s:357    .text:000000000000020c .L0 
     /tmp/ccV7zWtX.s:361    .text:0000000000000210 .L0 
     /tmp/ccV7zWtX.s:363    .text:0000000000000210 .L0 
     /tmp/ccV7zWtX.s:364    .text:0000000000000210 .L0 
     /tmp/ccV7zWtX.s:368    .text:0000000000000220 .L0 
     /tmp/ccV7zWtX.s:374    .text:0000000000000220 _ZN6Kernel3TCBnwEm
     /tmp/ccV7zWtX.s:377    .text:0000000000000220 .L0 
     /tmp/ccV7zWtX.s:379    .text:0000000000000220 .L0 
     /tmp/ccV7zWtX.s:380    .text:0000000000000224 .L0 
     /tmp/ccV7zWtX.s:383    .text:000000000000022c .L0 
     /tmp/ccV7zWtX.s:384    .text:000000000000022c .L0 
     /tmp/ccV7zWtX.s:386    .text:0000000000000230 .L0 
     /tmp/ccV7zWtX.s:391    .text:0000000000000230 .L0 
     /tmp/ccV7zWtX.s:392    .text:0000000000000230 .L0 
     /tmp/ccV7zWtX.s:393    .text:0000000000000230 .L0 
     /tmp/ccV7zWtX.s:396    .text:0000000000000234 .L0 
     /tmp/ccV7zWtX.s:397    .text:0000000000000234 .L0 
     /tmp/ccV7zWtX.s:399    .text:0000000000000238 .L0 
     /tmp/ccV7zWtX.s:402    .text:000000000000023c .L0 
     /tmp/ccV7zWtX.s:409    .text:0000000000000244 .L0 
     /tmp/ccV7zWtX.s:413    .text:0000000000000250 .L0 
     /tmp/ccV7zWtX.s:414    .text:0000000000000254 .L0 
     /tmp/ccV7zWtX.s:416    .text:0000000000000258 .L0 
     /tmp/ccV7zWtX.s:417    .text:0000000000000258 .L0 
     /tmp/ccV7zWtX.s:419    .text:000000000000025c .L0 
     /tmp/ccV7zWtX.s:421    .text:0000000000000260 .L0 
     /tmp/ccV7zWtX.s:427    .text:0000000000000260 _ZN6Kernel3TCBnaEm
     /tmp/ccV7zWtX.s:430    .text:0000000000000260 .L0 
     /tmp/ccV7zWtX.s:432    .text:0000000000000260 .L0 
     /tmp/ccV7zWtX.s:433    .text:0000000000000264 .L0 
     /tmp/ccV7zWtX.s:436    .text:000000000000026c .L0 
     /tmp/ccV7zWtX.s:437    .text:000000000000026c .L0 
GAS LISTING /tmp/ccV7zWtX.s 			page 25


     /tmp/ccV7zWtX.s:439    .text:0000000000000270 .L0 
     /tmp/ccV7zWtX.s:444    .text:0000000000000270 .L0 
     /tmp/ccV7zWtX.s:445    .text:0000000000000270 .L0 
     /tmp/ccV7zWtX.s:446    .text:0000000000000270 .L0 
     /tmp/ccV7zWtX.s:449    .text:0000000000000274 .L0 
     /tmp/ccV7zWtX.s:450    .text:0000000000000274 .L0 
     /tmp/ccV7zWtX.s:452    .text:0000000000000278 .L0 
     /tmp/ccV7zWtX.s:455    .text:000000000000027c .L0 
     /tmp/ccV7zWtX.s:462    .text:0000000000000284 .L0 
     /tmp/ccV7zWtX.s:466    .text:0000000000000290 .L0 
     /tmp/ccV7zWtX.s:467    .text:0000000000000294 .L0 
     /tmp/ccV7zWtX.s:469    .text:0000000000000298 .L0 
     /tmp/ccV7zWtX.s:470    .text:0000000000000298 .L0 
     /tmp/ccV7zWtX.s:472    .text:000000000000029c .L0 
     /tmp/ccV7zWtX.s:474    .text:00000000000002a0 .L0 
     /tmp/ccV7zWtX.s:480    .text:00000000000002a0 _ZN6Kernel3TCBdlEPv
     /tmp/ccV7zWtX.s:483    .text:00000000000002a0 .L0 
     /tmp/ccV7zWtX.s:487    .text:00000000000002a0 .L0 
     /tmp/ccV7zWtX.s:488    .text:00000000000002a4 .L0 
     /tmp/ccV7zWtX.s:491    .text:00000000000002ac .L0 
     /tmp/ccV7zWtX.s:492    .text:00000000000002ac .L0 
     /tmp/ccV7zWtX.s:494    .text:00000000000002b0 .L0 
     /tmp/ccV7zWtX.s:496    .text:00000000000002b0 .L0 
     /tmp/ccV7zWtX.s:497    .text:00000000000002b0 .L0 
     /tmp/ccV7zWtX.s:500    .text:00000000000002b8 .L0 
     /tmp/ccV7zWtX.s:501    .text:00000000000002bc .L0 
     /tmp/ccV7zWtX.s:503    .text:00000000000002c0 .L0 
     /tmp/ccV7zWtX.s:504    .text:00000000000002c0 .L0 
     /tmp/ccV7zWtX.s:506    .text:00000000000002c4 .L0 
     /tmp/ccV7zWtX.s:508    .text:00000000000002c8 .L0 
     /tmp/ccV7zWtX.s:521    .text:00000000000002c8 _ZN6Kernel3TCB12createThreadEPFvPvES1_Pm
     /tmp/ccV7zWtX.s:524    .text:00000000000002c8 .L0 
     /tmp/ccV7zWtX.s:528    .text:00000000000002c8 .L0 
     /tmp/ccV7zWtX.s:529    .text:00000000000002cc .L0 
     /tmp/ccV7zWtX.s:536    .text:00000000000002e4 .L0 
     /tmp/ccV7zWtX.s:537    .text:00000000000002e4 .L0 
     /tmp/ccV7zWtX.s:538    .text:00000000000002e4 .L0 
     /tmp/ccV7zWtX.s:539    .text:00000000000002e4 .L0 
     /tmp/ccV7zWtX.s:540    .text:00000000000002e4 .L0 
     /tmp/ccV7zWtX.s:541    .text:00000000000002e4 .L0 
     /tmp/ccV7zWtX.s:543    .text:00000000000002e8 .L0 
     /tmp/ccV7zWtX.s:548    .text:00000000000002f4 .L0 
     /tmp/ccV7zWtX.s:549    .text:00000000000002f4 .L0 
     /tmp/ccV7zWtX.s:577    .text:0000000000000338 .L0 
     /tmp/ccV7zWtX.s:579    .text:0000000000000340 .L0 
     /tmp/ccV7zWtX.s:581    .text:0000000000000344 .L0 
     /tmp/ccV7zWtX.s:582    .text:0000000000000344 .L0 
     /tmp/ccV7zWtX.s:584    .text:0000000000000348 .L0 
     /tmp/ccV7zWtX.s:586    .text:000000000000034c .L0 
     /tmp/ccV7zWtX.s:589    .text:0000000000000350 .L0 
     /tmp/ccV7zWtX.s:592    .text:0000000000000354 .L0 
     /tmp/ccV7zWtX.s:595    .text:0000000000000358 .L0 
     /tmp/ccV7zWtX.s:597    .text:000000000000035c .L0 
     /tmp/ccV7zWtX.s:622    .text:000000000000035c _ZN6Kernel3TCBdaEPv
     /tmp/ccV7zWtX.s:625    .text:000000000000035c .L0 
     /tmp/ccV7zWtX.s:629    .text:000000000000035c .L0 
     /tmp/ccV7zWtX.s:630    .text:0000000000000360 .L0 
GAS LISTING /tmp/ccV7zWtX.s 			page 26


     /tmp/ccV7zWtX.s:633    .text:0000000000000368 .L0 
     /tmp/ccV7zWtX.s:634    .text:0000000000000368 .L0 
     /tmp/ccV7zWtX.s:636    .text:000000000000036c .L0 
     /tmp/ccV7zWtX.s:638    .text:000000000000036c .L0 
     /tmp/ccV7zWtX.s:639    .text:000000000000036c .L0 
     /tmp/ccV7zWtX.s:642    .text:0000000000000374 .L0 
     /tmp/ccV7zWtX.s:643    .text:0000000000000378 .L0 
     /tmp/ccV7zWtX.s:645    .text:000000000000037c .L0 
     /tmp/ccV7zWtX.s:646    .text:000000000000037c .L0 
     /tmp/ccV7zWtX.s:648    .text:0000000000000380 .L0 
     /tmp/ccV7zWtX.s:650    .text:0000000000000384 .L0 
     /tmp/ccV7zWtX.s:663    .text:0000000000000384 _ZN6Kernel3TCB7superSPEm
     /tmp/ccV7zWtX.s:666    .text:0000000000000384 .L0 
     /tmp/ccV7zWtX.s:668    .text:0000000000000384 .L0 
     /tmp/ccV7zWtX.s:669    .text:0000000000000388 .L0 
     /tmp/ccV7zWtX.s:671    .text:000000000000038c .L0 
     /tmp/ccV7zWtX.s:673    .text:0000000000000390 .L0 
     /tmp/ccV7zWtX.s:677    .text:0000000000000390 .L0 
     /tmp/ccV7zWtX.s:678    .text:0000000000000390 .L0 
     /tmp/ccV7zWtX.s:679    .text:0000000000000390 .L0 
src/../h/../h/riscv.hpp:181    .text:0000000000000390 .L0 
     /tmp/ccV7zWtX.s:687    .text:0000000000000398 .L0 
     /tmp/ccV7zWtX.s:688    .text:0000000000000398 .L0 
     /tmp/ccV7zWtX.s:692    .text:000000000000039c .L0 
     /tmp/ccV7zWtX.s:694    .text:00000000000003a0 .L0 
     /tmp/ccV7zWtX.s:696    .text:00000000000003a4 .L0 
     /tmp/ccV7zWtX.s:697    .text:00000000000003a4 .L0 
     /tmp/ccV7zWtX.s:699    .text:00000000000003ac .L0 
     /tmp/ccV7zWtX.s:701    .text:00000000000003b0 .L0 
     /tmp/ccV7zWtX.s:702    .text:00000000000003b0 .L0 
     /tmp/ccV7zWtX.s:705    .text:00000000000003b4 .L0 
     /tmp/ccV7zWtX.s:711    .text:00000000000003bc .L0 
     /tmp/ccV7zWtX.s:712    .text:00000000000003c0 .L0 
     /tmp/ccV7zWtX.s:713    .text:00000000000003c0 .L0 
     /tmp/ccV7zWtX.s:715    .text:00000000000003c4 .L0 
     /tmp/ccV7zWtX.s:717    .text:00000000000003c8 .L0 
     /tmp/ccV7zWtX.s:723    .text:00000000000003c8 _ZN6Kernel3TCB6userSPEm
     /tmp/ccV7zWtX.s:726    .text:00000000000003c8 .L0 
     /tmp/ccV7zWtX.s:728    .text:00000000000003c8 .L0 
     /tmp/ccV7zWtX.s:729    .text:00000000000003cc .L0 
     /tmp/ccV7zWtX.s:731    .text:00000000000003d0 .L0 
     /tmp/ccV7zWtX.s:733    .text:00000000000003d4 .L0 
     /tmp/ccV7zWtX.s:737    .text:00000000000003d4 .L0 
     /tmp/ccV7zWtX.s:738    .text:00000000000003d4 .L0 
     /tmp/ccV7zWtX.s:739    .text:00000000000003d4 .L0 
src/../h/../h/riscv.hpp:181    .text:00000000000003d4 .L0 
     /tmp/ccV7zWtX.s:747    .text:00000000000003dc .L0 
     /tmp/ccV7zWtX.s:748    .text:00000000000003dc .L0 
     /tmp/ccV7zWtX.s:752    .text:00000000000003e0 .L0 
     /tmp/ccV7zWtX.s:754    .text:00000000000003e4 .L0 
     /tmp/ccV7zWtX.s:756    .text:00000000000003e8 .L0 
     /tmp/ccV7zWtX.s:757    .text:00000000000003e8 .L0 
     /tmp/ccV7zWtX.s:762    .text:00000000000003f4 .L0 
     /tmp/ccV7zWtX.s:763    .text:00000000000003f8 .L0 
     /tmp/ccV7zWtX.s:764    .text:00000000000003f8 .L0 
     /tmp/ccV7zWtX.s:766    .text:00000000000003fc .L0 
     /tmp/ccV7zWtX.s:768    .text:0000000000000400 .L0 
GAS LISTING /tmp/ccV7zWtX.s 			page 27


     /tmp/ccV7zWtX.s:779    .data:0000000000000000 _ZN6Kernel3TCB10cntActiveTE
     /tmp/ccV7zWtX.s:790    .bss:0000000000000008 _ZN6Kernel3TCB10oldRunningE
     /tmp/ccV7zWtX.s:786    .bss:0000000000000000 _ZN6Kernel3TCB7runningE
     /tmp/ccV7zWtX.s:776    .data:0000000000000000 .LANCHOR1
     /tmp/ccV7zWtX.s:783    .bss:0000000000000000 .LANCHOR0
     /tmp/ccV7zWtX.s:798    .text:0000000000000400 .L0 
     /tmp/ccV7zWtX.s:30     .text:000000000000001c .L0 
     /tmp/ccV7zWtX.s:93     .text:0000000000000080 .L0 
     /tmp/ccV7zWtX.s:124    .text:00000000000000b8 .L0 
     /tmp/ccV7zWtX.s:191    .text:0000000000000114 .L0 
     /tmp/ccV7zWtX.s:306    .text:00000000000001c0 .L0 
     /tmp/ccV7zWtX.s:337    .text:00000000000001e4 .L0 
     /tmp/ccV7zWtX.s:697    .text:00000000000003a4 .L0 
     /tmp/ccV7zWtX.s:757    .text:00000000000003e8 .L0 
     /tmp/ccV7zWtX.s:149    .text:00000000000000ec .L6
     /tmp/ccV7zWtX.s:133    .text:00000000000000d8 .L3
     /tmp/ccV7zWtX.s:101    .text:0000000000000098 .L4
     /tmp/ccV7zWtX.s:195    .text:0000000000000128 .L9
     /tmp/ccV7zWtX.s:330    .text:00000000000001d8 .L14
     /tmp/ccV7zWtX.s:360    .text:0000000000000210 .L17
     /tmp/ccV7zWtX.s:345    .text:00000000000001fc .L13
     /tmp/ccV7zWtX.s:404    .text:0000000000000244 .L19
     /tmp/ccV7zWtX.s:457    .text:0000000000000284 .L22
     /tmp/ccV7zWtX.s:575    .text:0000000000000338 .L31
     /tmp/ccV7zWtX.s:709    .text:00000000000003bc .L35
     /tmp/ccV7zWtX.s:760    .text:00000000000003f4 .L38
     /tmp/ccV7zWtX.s:551    .text:00000000000002f8 .LEHB0
     /tmp/ccV7zWtX.s:522    .text:00000000000002c8 .LFB44
     /tmp/ccV7zWtX.s:554    .text:0000000000000300 .LEHE0
     /tmp/ccV7zWtX.s:559    .text:0000000000000310 .LEHB1
     /tmp/ccV7zWtX.s:562    .text:0000000000000318 .LEHE1
     /tmp/ccV7zWtX.s:564    .text:000000000000031c .L28
     /tmp/ccV7zWtX.s:571    .text:0000000000000330 .LEHB2
     /tmp/ccV7zWtX.s:574    .text:0000000000000338 .LEHE2
     /tmp/ccV7zWtX.s:2297   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccV7zWtX.s:4018   .debug_str:000000000000078e .LASF132
     /tmp/ccV7zWtX.s:3914   .debug_str:00000000000004a2 .LASF133
     /tmp/ccV7zWtX.s:3916   .debug_str:00000000000004ae .LASF134
     /tmp/ccV7zWtX.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccV7zWtX.s:793    .text:0000000000000400 .Letext0
     /tmp/ccV7zWtX.s:3768   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccV7zWtX.s:3938   .debug_str:000000000000058d .LASF0
     /tmp/ccV7zWtX.s:3956   .debug_str:00000000000005f7 .LASF1
     /tmp/ccV7zWtX.s:3918   .debug_str:00000000000004ca .LASF2
     /tmp/ccV7zWtX.s:3880   .debug_str:00000000000003aa .LASF4
     /tmp/ccV7zWtX.s:3998   .debug_str:000000000000070d .LASF3
     /tmp/ccV7zWtX.s:3794   .debug_str:00000000000000a1 .LASF5
     /tmp/ccV7zWtX.s:3960   .debug_str:0000000000000616 .LASF6
     /tmp/ccV7zWtX.s:3936   .debug_str:000000000000057a .LASF7
     /tmp/ccV7zWtX.s:4034   .debug_str:00000000000008fe .LASF8
     /tmp/ccV7zWtX.s:3862   .debug_str:0000000000000319 .LASF9
     /tmp/ccV7zWtX.s:3974   .debug_str:0000000000000676 .LASF10
     /tmp/ccV7zWtX.s:4022   .debug_str:000000000000086f .LASF11
     /tmp/ccV7zWtX.s:3798   .debug_str:00000000000000b4 .LASF12
     /tmp/ccV7zWtX.s:3774   .debug_str:0000000000000010 .LASF13
     /tmp/ccV7zWtX.s:3808   .debug_str:0000000000000118 .LASF14
     /tmp/ccV7zWtX.s:3990   .debug_str:00000000000006c8 .LASF15
GAS LISTING /tmp/ccV7zWtX.s 			page 28


     /tmp/ccV7zWtX.s:3822   .debug_str:00000000000001ab .LASF16
     /tmp/ccV7zWtX.s:4044   .debug_str:0000000000000956 .LASF135
     /tmp/ccV7zWtX.s:3932   .debug_str:000000000000055f .LASF23
     /tmp/ccV7zWtX.s:3790   .debug_str:0000000000000090 .LASF136
     /tmp/ccV7zWtX.s:4012   .debug_str:0000000000000770 .LASF17
     /tmp/ccV7zWtX.s:4066   .debug_str:00000000000009eb .LASF18
     /tmp/ccV7zWtX.s:3966   .debug_str:0000000000000651 .LASF30
     /tmp/ccV7zWtX.s:3902   .debug_str:0000000000000433 .LASF32
     /tmp/ccV7zWtX.s:3970   .debug_str:000000000000065d .LASF19
     /tmp/ccV7zWtX.s:3924   .debug_str:00000000000004fc .LASF21
     /tmp/ccV7zWtX.s:3972   .debug_str:000000000000066a .LASF20
     /tmp/ccV7zWtX.s:3858   .debug_str:00000000000002da .LASF22
     /tmp/ccV7zWtX.s:3898   .debug_str:0000000000000424 .LASF63
     /tmp/ccV7zWtX.s:3782   .debug_str:000000000000004b .LASF137
     /tmp/ccV7zWtX.s:3964   .debug_str:0000000000000634 .LASF138
     /tmp/ccV7zWtX.s:3984   .debug_str:00000000000006b4 .LASF139
     /tmp/ccV7zWtX.s:3834   .debug_str:0000000000000237 .LASF24
     /tmp/ccV7zWtX.s:3850   .debug_str:00000000000002a4 .LASF25
     /tmp/ccV7zWtX.s:3962   .debug_str:0000000000000629 .LASF36
     /tmp/ccV7zWtX.s:4024   .debug_str:000000000000087e .LASF38
     /tmp/ccV7zWtX.s:3920   .debug_str:00000000000004d8 .LASF26
     /tmp/ccV7zWtX.s:3928   .debug_str:000000000000052e .LASF27
     /tmp/ccV7zWtX.s:3830   .debug_str:0000000000000214 .LASF67
     /tmp/ccV7zWtX.s:3870   .debug_str:0000000000000363 .LASF74
     /tmp/ccV7zWtX.s:3840   .debug_str:000000000000025d .LASF28
     /tmp/ccV7zWtX.s:3908   .debug_str:0000000000000479 .LASF29
     /tmp/ccV7zWtX.s:3992   .debug_str:00000000000006de .LASF50
     /tmp/ccV7zWtX.s:4028   .debug_str:00000000000008a7 .LASF52
     /tmp/ccV7zWtX.s:3942   .debug_str:00000000000005a1 .LASF31
     /tmp/ccV7zWtX.s:3800   .debug_str:00000000000000c4 .LASF33
     /tmp/ccV7zWtX.s:3896   .debug_str:0000000000000417 .LASF34
     /tmp/ccV7zWtX.s:4030   .debug_str:00000000000008c4 .LASF35
     /tmp/ccV7zWtX.s:3780   .debug_str:0000000000000041 .LASF37
     /tmp/ccV7zWtX.s:3802   .debug_str:00000000000000de .LASF39
     /tmp/ccV7zWtX.s:3884   .debug_str:00000000000003c9 .LASF40
     /tmp/ccV7zWtX.s:3786   .debug_str:0000000000000058 .LASF41
     /tmp/ccV7zWtX.s:4014   .debug_str:0000000000000775 .LASF42
     /tmp/ccV7zWtX.s:3778   .debug_str:0000000000000029 .LASF43
     /tmp/ccV7zWtX.s:3988   .debug_str:00000000000006c0 .LASF44
     /tmp/ccV7zWtX.s:3996   .debug_str:00000000000006f4 .LASF45
     /tmp/ccV7zWtX.s:4042   .debug_str:0000000000000949 .LASF46
     /tmp/ccV7zWtX.s:3886   .debug_str:00000000000003d4 .LASF47
     /tmp/ccV7zWtX.s:3994   .debug_str:00000000000006e4 .LASF48
     /tmp/ccV7zWtX.s:4048   .debug_str:000000000000096a .LASF49
     /tmp/ccV7zWtX.s:4006   .debug_str:0000000000000737 .LASF51
     /tmp/ccV7zWtX.s:4010   .debug_str:000000000000075c .LASF53
     /tmp/ccV7zWtX.s:4068   .debug_str:00000000000009f0 .LASF54
     /tmp/ccV7zWtX.s:4050   .debug_str:000000000000097d .LASF55
     /tmp/ccV7zWtX.s:3888   .debug_str:00000000000003e7 .LASF56
     /tmp/ccV7zWtX.s:3876   .debug_str:000000000000039a .LASF57
     /tmp/ccV7zWtX.s:3892   .debug_str:00000000000003f7 .LASF58
     /tmp/ccV7zWtX.s:3980   .debug_str:00000000000006a3 .LASF59
     /tmp/ccV7zWtX.s:4002   .debug_str:0000000000000726 .LASF60
     /tmp/ccV7zWtX.s:3982   .debug_str:00000000000006ac .LASF61
     /tmp/ccV7zWtX.s:3770   .debug_str:0000000000000000 .LASF62
     /tmp/ccV7zWtX.s:4038   .debug_str:0000000000000922 .LASF140
     /tmp/ccV7zWtX.s:3868   .debug_str:0000000000000346 .LASF141
GAS LISTING /tmp/ccV7zWtX.s 			page 29


     /tmp/ccV7zWtX.s:3810   .debug_str:0000000000000124 .LASF68
     /tmp/ccV7zWtX.s:3828   .debug_str:00000000000001e4 .LASF119
     /tmp/ccV7zWtX.s:3904   .debug_str:0000000000000456 .LASF64
     /tmp/ccV7zWtX.s:4004   .debug_str:000000000000072d .LASF65
     /tmp/ccV7zWtX.s:3968   .debug_str:0000000000000656 .LASF66
     /tmp/ccV7zWtX.s:3788   .debug_str:0000000000000075 .LASF142
     /tmp/ccV7zWtX.s:3820   .debug_str:0000000000000188 .LASF143
     /tmp/ccV7zWtX.s:3944   .debug_str:00000000000005aa .LASF144
     /tmp/ccV7zWtX.s:3952   .debug_str:00000000000005d5 .LASF69
     /tmp/ccV7zWtX.s:3826   .debug_str:00000000000001d5 .LASF145
     /tmp/ccV7zWtX.s:3818   .debug_str:000000000000017c .LASF70
     /tmp/ccV7zWtX.s:4046   .debug_str:000000000000095d .LASF71
     /tmp/ccV7zWtX.s:3796   .debug_str:00000000000000a8 .LASF72
     /tmp/ccV7zWtX.s:3776   .debug_str:0000000000000020 .LASF73
     /tmp/ccV7zWtX.s:4008   .debug_str:0000000000000747 .LASF75
     /tmp/ccV7zWtX.s:3836   .debug_str:000000000000023c .LASF76
     /tmp/ccV7zWtX.s:3814   .debug_str:000000000000014b .LASF77
     /tmp/ccV7zWtX.s:4000   .debug_str:000000000000071f .LASF78
     /tmp/ccV7zWtX.s:3978   .debug_str:0000000000000690 .LASF79
     /tmp/ccV7zWtX.s:3986   .debug_str:00000000000006b9 .LASF80
     /tmp/ccV7zWtX.s:3860   .debug_str:0000000000000306 .LASF81
     /tmp/ccV7zWtX.s:3854   .debug_str:00000000000002ca .LASF82
     /tmp/ccV7zWtX.s:3824   .debug_str:00000000000001c1 .LASF83
     /tmp/ccV7zWtX.s:3772   .debug_str:0000000000000008 .LASF84
     /tmp/ccV7zWtX.s:4062   .debug_str:00000000000009c4 .LASF85
     /tmp/ccV7zWtX.s:3842   .debug_str:0000000000000265 .LASF86
     /tmp/ccV7zWtX.s:3804   .debug_str:00000000000000fa .LASF87
     /tmp/ccV7zWtX.s:3872   .debug_str:0000000000000383 .LASF88
     /tmp/ccV7zWtX.s:3844   .debug_str:000000000000026d .LASF89
     /tmp/ccV7zWtX.s:3940   .debug_str:000000000000059a .LASF90
     /tmp/ccV7zWtX.s:4064   .debug_str:00000000000009d8 .LASF91
     /tmp/ccV7zWtX.s:3792   .debug_str:000000000000009a .LASF92
     /tmp/ccV7zWtX.s:3852   .debug_str:00000000000002b7 .LASF93
     /tmp/ccV7zWtX.s:3926   .debug_str:0000000000000528 .LASF94
     /tmp/ccV7zWtX.s:4016   .debug_str:000000000000077c .LASF95
     /tmp/ccV7zWtX.s:3900   .debug_str:000000000000042d .LASF96
     /tmp/ccV7zWtX.s:4070   .debug_str:0000000000000a03 .LASF97
     /tmp/ccV7zWtX.s:3934   .debug_str:000000000000056f .LASF98
     /tmp/ccV7zWtX.s:3922   .debug_str:00000000000004e4 .LASF99
     /tmp/ccV7zWtX.s:3890   .debug_str:00000000000003ec .LASF100
     /tmp/ccV7zWtX.s:3906   .debug_str:0000000000000461 .LASF101
     /tmp/ccV7zWtX.s:3806   .debug_str:000000000000010e .LASF102
     /tmp/ccV7zWtX.s:3912   .debug_str:000000000000048c .LASF103
     /tmp/ccV7zWtX.s:3846   .debug_str:0000000000000281 .LASF104
     /tmp/ccV7zWtX.s:3864   .debug_str:0000000000000327 .LASF105
     /tmp/ccV7zWtX.s:4026   .debug_str:000000000000089c .LASF106
     /tmp/ccV7zWtX.s:4054   .debug_str:0000000000000996 .LASF107
     /tmp/ccV7zWtX.s:3958   .debug_str:000000000000060a .LASF108
     /tmp/ccV7zWtX.s:3812   .debug_str:0000000000000132 .LASF109
     /tmp/ccV7zWtX.s:4060   .debug_str:00000000000009b8 .LASF110
     /tmp/ccV7zWtX.s:3848   .debug_str:000000000000028b .LASF111
     /tmp/ccV7zWtX.s:3950   .debug_str:00000000000005cd .LASF112
     /tmp/ccV7zWtX.s:3882   .debug_str:00000000000003b1 .LASF113
     /tmp/ccV7zWtX.s:3866   .debug_str:000000000000033d .LASF114
     /tmp/ccV7zWtX.s:3832   .debug_str:0000000000000222 .LASF115
     /tmp/ccV7zWtX.s:3856   .debug_str:00000000000002d2 .LASF116
     /tmp/ccV7zWtX.s:4036   .debug_str:000000000000090e .LASF117
GAS LISTING /tmp/ccV7zWtX.s 			page 30


     /tmp/ccV7zWtX.s:3976   .debug_str:0000000000000685 .LASF118
     /tmp/ccV7zWtX.s:3954   .debug_str:00000000000005db .LASF120
     /tmp/ccV7zWtX.s:3784   .debug_str:0000000000000053 .LASF121
     /tmp/ccV7zWtX.s:3894   .debug_str:00000000000003ff .LASF122
     /tmp/ccV7zWtX.s:4040   .debug_str:000000000000092d .LASF123
     /tmp/ccV7zWtX.s:3816   .debug_str:0000000000000160 .LASF124
     /tmp/ccV7zWtX.s:724    .text:00000000000003c8 .LFB50
     /tmp/ccV7zWtX.s:769    .text:0000000000000400 .LFE50
     /tmp/ccV7zWtX.s:3364   .debug_loc:0000000000000000 .LLST22
     /tmp/ccV7zWtX.s:735    .text:00000000000003d4 .LBB35
     /tmp/ccV7zWtX.s:750    .text:00000000000003e0 .LBE35
     /tmp/ccV7zWtX.s:664    .text:0000000000000384 .LFB49
     /tmp/ccV7zWtX.s:718    .text:00000000000003c8 .LFE49
     /tmp/ccV7zWtX.s:3378   .debug_loc:0000000000000039 .LLST21
     /tmp/ccV7zWtX.s:675    .text:0000000000000390 .LBB33
     /tmp/ccV7zWtX.s:690    .text:000000000000039c .LBE33
     /tmp/ccV7zWtX.s:623    .text:000000000000035c .LFB48
     /tmp/ccV7zWtX.s:651    .text:0000000000000384 .LFE48
     /tmp/ccV7zWtX.s:3405   .debug_loc:00000000000000a4 .LLST20
     /tmp/ccV7zWtX.s:640    .text:0000000000000374 .LVL59
     /tmp/ccV7zWtX.s:481    .text:00000000000002a0 .LFB47
     /tmp/ccV7zWtX.s:509    .text:00000000000002c8 .LFE47
     /tmp/ccV7zWtX.s:3419   .debug_loc:00000000000000dd .LLST16
     /tmp/ccV7zWtX.s:498    .text:00000000000002b8 .LVL47
     /tmp/ccV7zWtX.s:428    .text:0000000000000260 .LFB46
     /tmp/ccV7zWtX.s:475    .text:00000000000002a0 .LFE46
     /tmp/ccV7zWtX.s:3433   .debug_loc:0000000000000116 .LLST14
     /tmp/ccV7zWtX.s:442    .text:0000000000000270 .LBB31
     /tmp/ccV7zWtX.s:460    .text:0000000000000284 .LBE31
     /tmp/ccV7zWtX.s:3453   .debug_loc:0000000000000164 .LLST15
     /tmp/ccV7zWtX.s:464    .text:0000000000000290 .LVL45
     /tmp/ccV7zWtX.s:375    .text:0000000000000220 .LFB45
     /tmp/ccV7zWtX.s:422    .text:0000000000000260 .LFE45
     /tmp/ccV7zWtX.s:3469   .debug_loc:000000000000019f .LLST12
     /tmp/ccV7zWtX.s:389    .text:0000000000000230 .LBB29
     /tmp/ccV7zWtX.s:407    .text:0000000000000244 .LBE29
     /tmp/ccV7zWtX.s:3489   .debug_loc:00000000000001ed .LLST13
     /tmp/ccV7zWtX.s:411    .text:0000000000000250 .LVL39
     /tmp/ccV7zWtX.s:598    .text:000000000000035c .LFE44
     /tmp/ccV7zWtX.s:3505   .debug_loc:0000000000000228 .LLST17
     /tmp/ccV7zWtX.s:3534   .debug_loc:000000000000029d .LLST18
     /tmp/ccV7zWtX.s:3552   .debug_loc:00000000000002e9 .LLST19
     /tmp/ccV7zWtX.s:553    .text:0000000000000300 .LVL50
     /tmp/ccV7zWtX.s:561    .text:0000000000000318 .LVL51
     /tmp/ccV7zWtX.s:569    .text:000000000000032c .LVL53
     /tmp/ccV7zWtX.s:573    .text:0000000000000338 .LVL54
     /tmp/ccV7zWtX.s:10     .text:0000000000000000 .LFB43
     /tmp/ccV7zWtX.s:67     .text:000000000000005c .LFE43
     /tmp/ccV7zWtX.s:41     .text:0000000000000038 .LBB19
     /tmp/ccV7zWtX.s:50     .text:0000000000000040 .LBE19
     /tmp/ccV7zWtX.s:3570   .debug_loc:0000000000000335 .LLST0
     /tmp/ccV7zWtX.s:3578   .debug_loc:0000000000000359 .LLST1
     /tmp/ccV7zWtX.s:27     .text:000000000000001c .LVL0
     /tmp/ccV7zWtX.s:54     .text:0000000000000048 .LVL4
     /tmp/ccV7zWtX.s:291    .text:00000000000001ac .LFB42
     /tmp/ccV7zWtX.s:369    .text:0000000000000220 .LFE42
     /tmp/ccV7zWtX.s:4056   .debug_str:00000000000009ae .LASF125
GAS LISTING /tmp/ccV7zWtX.s 			page 31


     /tmp/ccV7zWtX.s:3585   .debug_loc:000000000000037c .LLST9
     /tmp/ccV7zWtX.s:309    .text:00000000000001c8 .LBB25
     /tmp/ccV7zWtX.s:316    .text:00000000000001cc .LBE25
     /tmp/ccV7zWtX.s:3596   .debug_loc:00000000000003b2 .LLST10
     /tmp/ccV7zWtX.s:320    .text:00000000000001d0 .LBB27
     /tmp/ccV7zWtX.s:327    .text:00000000000001d4 .LBE27
     /tmp/ccV7zWtX.s:3603   .debug_loc:00000000000003d5 .LLST11
     /tmp/ccV7zWtX.s:334    .text:00000000000001e0 .LVL29
     /tmp/ccV7zWtX.s:344    .text:00000000000001fc .LVL30
     /tmp/ccV7zWtX.s:366    .text:000000000000021c .LVL33
     /tmp/ccV7zWtX.s:237    .text:0000000000000154 .LFB41
     /tmp/ccV7zWtX.s:285    .text:00000000000001ac .LFE41
     /tmp/ccV7zWtX.s:4058   .debug_str:00000000000009b3 .LASF126
     /tmp/ccV7zWtX.s:3610   .debug_loc:00000000000003f8 .LLST7
     /tmp/ccV7zWtX.s:3948   .debug_str:00000000000005c8 .LASF127
     /tmp/ccV7zWtX.s:3628   .debug_loc:0000000000000444 .LLST8
     /tmp/ccV7zWtX.s:258    .text:000000000000017c .LVL20
     /tmp/ccV7zWtX.s:264    .text:000000000000018c .LVL21
     /tmp/ccV7zWtX.s:268    .text:0000000000000194 .LVL22
     /tmp/ccV7zWtX.s:4052   .debug_str:0000000000000991 .LASF128
     /tmp/ccV7zWtX.s:3878   .debug_str:00000000000003a0 .LASF129
     /tmp/ccV7zWtX.s:3930   .debug_str:000000000000054c .LASF130
     /tmp/ccV7zWtX.s:166    .text:00000000000000f4 .LFB39
     /tmp/ccV7zWtX.s:221    .text:0000000000000154 .LFE39
     /tmp/ccV7zWtX.s:3646   .debug_loc:0000000000000490 .LLST6
     /tmp/ccV7zWtX.s:201    .text:0000000000000134 .LVL16
     /tmp/ccV7zWtX.s:206    .text:0000000000000140 .LVL17
     /tmp/ccV7zWtX.s:4020   .debug_str:0000000000000852 .LASF131
     /tmp/ccV7zWtX.s:73     .text:000000000000005c .LFB36
     /tmp/ccV7zWtX.s:158    .text:00000000000000f4 .LFE36
     /tmp/ccV7zWtX.s:3664   .debug_loc:00000000000004dc .LLST2
     /tmp/ccV7zWtX.s:3686   .debug_loc:000000000000053b .LLST3
     /tmp/ccV7zWtX.s:3704   .debug_loc:0000000000000587 .LLST4
     /tmp/ccV7zWtX.s:3722   .debug_loc:00000000000005d3 .LLST5
     /tmp/ccV7zWtX.s:119    .text:00000000000000b4 .LVL9
     /tmp/ccV7zWtX.s:132    .text:00000000000000d8 .LVL10
     /tmp/ccV7zWtX.s:3910   .debug_str:0000000000000484 .LASF146
     /tmp/ccV7zWtX.s:3874   .debug_str:000000000000038b .LASF147
     /tmp/ccV7zWtX.s:3838   .debug_str:0000000000000245 .LASF148
     /tmp/ccV7zWtX.s:4032   .debug_str:00000000000008ed .LASF149
     /tmp/ccV7zWtX.s:3946   .debug_str:00000000000005bc .LASF150
     /tmp/ccV7zWtX.s:727    .text:00000000000003c8 .LVL64
     /tmp/ccV7zWtX.s:759    .text:00000000000003f4 .LVL65
     /tmp/ccV7zWtX.s:667    .text:0000000000000384 .LVL60
     /tmp/ccV7zWtX.s:703    .text:00000000000003b4 .LVL61
     /tmp/ccV7zWtX.s:706    .text:00000000000003b8 .LVL62
     /tmp/ccV7zWtX.s:708    .text:00000000000003bc .LVL63
     /tmp/ccV7zWtX.s:628    .text:000000000000035c .LVL58
     /tmp/ccV7zWtX.s:486    .text:00000000000002a0 .LVL46
     /tmp/ccV7zWtX.s:431    .text:0000000000000260 .LVL40
     /tmp/ccV7zWtX.s:447    .text:0000000000000274 .LVL42
     /tmp/ccV7zWtX.s:453    .text:000000000000027c .LVL43
     /tmp/ccV7zWtX.s:441    .text:0000000000000270 .LVL41
     /tmp/ccV7zWtX.s:458    .text:0000000000000284 .LVL44
     /tmp/ccV7zWtX.s:378    .text:0000000000000220 .LVL34
     /tmp/ccV7zWtX.s:394    .text:0000000000000234 .LVL36
     /tmp/ccV7zWtX.s:400    .text:000000000000023c .LVL37
GAS LISTING /tmp/ccV7zWtX.s 			page 32


     /tmp/ccV7zWtX.s:388    .text:0000000000000230 .LVL35
     /tmp/ccV7zWtX.s:405    .text:0000000000000244 .LVL38
     /tmp/ccV7zWtX.s:527    .text:00000000000002c8 .LVL48
     /tmp/ccV7zWtX.s:550    .text:00000000000002f8 .LVL49
     /tmp/ccV7zWtX.s:566    .text:0000000000000320 .LVL52
     /tmp/ccV7zWtX.s:587    .text:000000000000034c .LVL55
     /tmp/ccV7zWtX.s:590    .text:0000000000000350 .LVL56
     /tmp/ccV7zWtX.s:593    .text:0000000000000354 .LVL57
     /tmp/ccV7zWtX.s:40     .text:0000000000000038 .LVL2
     /tmp/ccV7zWtX.s:48     .text:0000000000000040 .LVL3
     /tmp/ccV7zWtX.s:307    .text:00000000000001c8 .LVL25
     /tmp/ccV7zWtX.s:355    .text:0000000000000208 .LVL31
     /tmp/ccV7zWtX.s:359    .text:0000000000000210 .LVL32
     /tmp/ccV7zWtX.s:314    .text:00000000000001cc .LVL26
     /tmp/ccV7zWtX.s:319    .text:00000000000001d0 .LVL27
     /tmp/ccV7zWtX.s:325    .text:00000000000001d4 .LVL28
     /tmp/ccV7zWtX.s:240    .text:0000000000000154 .LVL19
     /tmp/ccV7zWtX.s:277    .text:00000000000001a0 .LVL23
     /tmp/ccV7zWtX.s:280    .text:00000000000001a4 .LVL24
     /tmp/ccV7zWtX.s:171    .text:00000000000000f4 .LVL14
     /tmp/ccV7zWtX.s:199    .text:000000000000012c .LVL15
     /tmp/ccV7zWtX.s:216    .text:000000000000014c .LVL18
     /tmp/ccV7zWtX.s:76     .text:000000000000005c .LVL5
     /tmp/ccV7zWtX.s:117    .text:00000000000000ac .LVL8
     /tmp/ccV7zWtX.s:144    .text:00000000000000e4 .LVL11
     /tmp/ccV7zWtX.s:148    .text:00000000000000ec .LVL12
     /tmp/ccV7zWtX.s:100    .text:0000000000000098 .LVL6
     /tmp/ccV7zWtX.s:154    .text:00000000000000f0 .LVL13
     /tmp/ccV7zWtX.s:799    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccV7zWtX.s:224    .gcc_except_table:0000000000000000 .LLSDA39
     /tmp/ccV7zWtX.s:511    .gcc_except_table:0000000000000004 .LLSDA47
     /tmp/ccV7zWtX.s:600    .gcc_except_table:0000000000000008 .LLSDA44
     /tmp/ccV7zWtX.s:653    .gcc_except_table:0000000000000033 .LLSDA48

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z11thread_exitv
_ZN6Kernel15MemoryAllocator12__mem__allocEm
_ZN6Kernel9Scheduler3putEPNS_3TCBE
_ZN6Kernel15MemoryAllocator11__mem__freeEPv
__gxx_personality_v0
_ZN5Riscv8pushRegsEv
_ZN6Kernel3TCB13switchContextEPNS0_7ContextES2_
_ZN5Riscv7popRegsEv
_ZN6Kernel9Scheduler3getEv
_Unwind_Resume
