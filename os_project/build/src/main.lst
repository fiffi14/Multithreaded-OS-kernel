GAS LISTING /tmp/ccc5RAP0.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z10userMainWrPv
   9              	_Z10userMainWrPv:
  10              	.LFB35:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** 
   2:src/main.cpp  **** #include "../h/memoryallocator.hpp"
   3:src/main.cpp  **** #include "../h/riscv.hpp"
   4:src/main.cpp  **** #include "../h/scheduler.hpp"
   5:src/main.cpp  **** #include "../h/syscall_c.h"
   6:src/main.cpp  **** #include "../h/tcb.hpp"
   7:src/main.cpp  **** #include "../test/printing.hpp"
   8:src/main.cpp  **** 
   9:src/main.cpp  **** //AKO JE MULTIPLE DEF OF USERMAIN SKLONI INCLUDE TOG CPP FAJLA
  10:src/main.cpp  **** using namespace Kernel;
  11:src/main.cpp  **** 
  12:src/main.cpp  **** void userMain();
  13:src/main.cpp  **** int guard = 0;
  14:src/main.cpp  **** 
  15:src/main.cpp  **** void userMainWr(void*) {
  12              		.loc 1 15 24
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  16:src/main.cpp  ****     userMain();
  22              		.loc 1 16 5
  23              		.loc 1 16 13 is_stmt 0
  24 0010 97000000 		call	_Z8userMainv@plt
  24      E7800000 
  25              	.LVL0:
  17:src/main.cpp  ****     guard = 1;
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 11 is_stmt 0
  28 0018 93071000 		li	a5,1
  29 001c 17070000 		sw	a5,.LANCHOR0,a4
  29      2320F700 
  18:src/main.cpp  **** }
  30              		.loc 1 18 1
  31 0024 83308100 		ld	ra,8(sp)
  32              		.cfi_restore 1
  33 0028 03340100 		ld	s0,0(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 002c 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 0030 67800000 		jr	ra
GAS LISTING /tmp/ccc5RAP0.s 			page 2


  39              		.cfi_endproc
  40              	.LFE35:
  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 6D61696E 		.string	"main gotov\n"
  45      20676F74 
  45      6F760A00 
  46              		.text
  47              		.align	2
  48              		.globl	main
  50              	main:
  51              	.LFB36:
  19:src/main.cpp  **** 
  20:src/main.cpp  **** void main() {
  52              		.loc 1 20 13 is_stmt 1
  53              		.cfi_startproc
  54 0034 130101FF 		addi	sp,sp,-16
  55              		.cfi_def_cfa_offset 16
  56 0038 23341100 		sd	ra,8(sp)
  57 003c 23308100 		sd	s0,0(sp)
  58              		.cfi_offset 1, -8
  59              		.cfi_offset 8, -16
  60 0040 13040101 		addi	s0,sp,16
  61              		.cfi_def_cfa 8, 0
  21:src/main.cpp  ****     MemoryAllocator::init();
  62              		.loc 1 21 5
  63              		.loc 1 21 26 is_stmt 0
  64 0044 97000000 		call	_ZN6Kernel15MemoryAllocator4initEv@plt
  64      E7800000 
  65              	.LVL1:
  22:src/main.cpp  **** 
  23:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::intpRoutine);
  66              		.loc 1 23 5 is_stmt 1
  67              		.loc 1 23 19 is_stmt 0
  68 004c 97070000 		la	a5,_ZN5Riscv11intpRoutineEv
  68      83B70700 
  69              	.LVL2:
  70              	.LBB6:
  71              	.LBB7:
  72              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 8/19/24.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   6:src/../h/riscv.hpp **** #define RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** #include "../h/memoryallocator.hpp"
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp **** class Riscv {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 	// read register scause
  14:src/../h/riscv.hpp ****     static uint64 r_scause();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     // write register scause
GAS LISTING /tmp/ccc5RAP0.s 			page 3


  17:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // read register sepc
  20:src/../h/riscv.hpp ****     static uint64 r_sepc();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // write register sepc
  23:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // read register stvec
  26:src/../h/riscv.hpp ****     static uint64 r_stvec();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // write register stvec
  29:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // read register stval
  32:src/../h/riscv.hpp ****     static uint64 r_stval();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // write register stval
  35:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     enum BitMaskSip //koji zahtevi za prekid su trenutno aktivni
  38:src/../h/riscv.hpp ****     { //1-postoji zahtev za prekid; 0-prekid je obradjen
  39:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1), //SOFTWARE INTP PENDING;
  40:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5), //TIMER IP
  41:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9), //EXTERNAL IP
  42:src/../h/riscv.hpp ****     };
  43:src/../h/riscv.hpp ****     //AKO SE IZVR SUPERVISOR REZIM I bit SIE U sstatus IMA VR 0, VR REGS SIE SE IGNORISE
  44:src/../h/riscv.hpp ****     // mask set register sip
  45:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     // mask clear register sip
  48:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     // read register sip
  51:src/../h/riscv.hpp ****     static uint64 r_sip();
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     // write register sip
  54:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     enum BitMaskSstatus
  57:src/../h/riscv.hpp ****     {
  58:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // mask set register sstatus
  64:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // mask clear register sstatus
  67:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // read register sstatus
  70:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // write register sstatus
  73:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
GAS LISTING /tmp/ccc5RAP0.s 			page 4


  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     static void popSppSpie(); //popuj bitove spp i spie iz sstatus
  76:src/../h/riscv.hpp ****     	//spp je supervisor previous privilege; spie supervisor previous intp enable
  77:src/../h/riscv.hpp ****     //mora biti non inline!!!
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     static void intpRoutine();
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     static size_t roundToBlks(size_t size);
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     static uint64 syscall(uint64 code, uint64 arg1=0UL, uint64 arg2=0UL, uint64 arg3=0UL, uint64 ar
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     static void pushRegs();
  86:src/../h/riscv.hpp ****     static void popRegs();
  87:src/../h/riscv.hpp **** private:
  88:src/../h/riscv.hpp **** 	static uint64 intpHandle(uint64 code, uint64 arg1, uint64 arg2, uint64 arg3, uint64 arg4);
  89:src/../h/riscv.hpp **** };
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline size_t Riscv::roundToBlks(size_t size) //od 64B koristi se 48B
  93:src/../h/riscv.hpp **** {
  94:src/../h/riscv.hpp ****     size += sizeof(Kernel::MemoryAllocator::BlkHeader);
  95:src/../h/riscv.hpp ****     return size/MEM_BLOCK_SIZE + (size%MEM_BLOCK_SIZE ? 1 : 0);
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  99:src/../h/riscv.hpp **** {
 100:src/../h/riscv.hpp ****     uint64 volatile scause;
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 102:src/../h/riscv.hpp ****     return scause;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     uint64 volatile sepc;
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 114:src/../h/riscv.hpp ****     return sepc;
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     uint64 volatile stvec;
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 126:src/../h/riscv.hpp ****     return stvec;
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 130:src/../h/riscv.hpp **** {
GAS LISTING /tmp/ccc5RAP0.s 			page 5


 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  73              		.loc 2 131 5 is_stmt 1
  74              		.loc 2 131 69 is_stmt 0
  75              	#APP
  76              	# 131 "src/../h/riscv.hpp" 1
 132              	}
  77              		csrw stvec, a5
  78              	# 0 "" 2
  79              	.LVL3:
  80              	#NO_APP
  81              	.LBE7:
  82              	.LBE6:
  24:src/main.cpp  ****     TCB *mainTCB = TCB::createThread(nullptr,nullptr,nullptr);
  83              		.loc 1 24 5 is_stmt 1
  84              		.loc 1 24 37 is_stmt 0
  85 0058 13060000 		li	a2,0
  86 005c 93050000 		li	a1,0
  87 0060 13050000 		li	a0,0
  88 0064 97000000 		call	_ZN6Kernel3TCB12createThreadEPFvPvES1_Pm@plt
  88      E7800000 
  89              	.LVL4:
  25:src/main.cpp  ****     TCB::running = mainTCB;
  90              		.loc 1 25 5 is_stmt 1
  91              		.loc 1 25 18 is_stmt 0
  92 006c 97070000 		la	a5,_ZN6Kernel3TCB7runningE
  92      83B70700 
  93 0074 23B0A700 		sd	a0,0(a5)
  26:src/main.cpp  **** 
  27:src/main.cpp  ****     uint64 *sp = (uint64*)MemoryAllocator::__mem__alloc(DEFAULT_STACK_SIZE);
  94              		.loc 1 27 5 is_stmt 1
  95              		.loc 1 27 56 is_stmt 0
  96 0078 37150000 		li	a0,4096
  97              	.LVL5:
  98 007c 97000000 		call	_ZN6Kernel15MemoryAllocator12__mem__allocEm@plt
  98      E7800000 
  99              	.LVL6:
 100 0084 13060500 		mv	a2,a0
 101              	.LVL7:
  28:src/main.cpp  ****     TCB::createThread(userMainWr,nullptr,sp);
 102              		.loc 1 28 5 is_stmt 1
 103              		.loc 1 28 22 is_stmt 0
 104 0088 93050000 		li	a1,0
 105 008c 17050000 		lla	a0,_Z10userMainWrPv
 105      13050500 
 106              	.LVL8:
 107 0094 97000000 		call	_ZN6Kernel3TCB12createThreadEPFvPvES1_Pm@plt
 107      E7800000 
 108              	.LVL9:
  29:src/main.cpp  **** 
  30:src/main.cpp  **** 
  31:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 109              		.loc 1 31 5 is_stmt 1
 110              	.LBB8:
 111              	.LBB9:
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 135:src/../h/riscv.hpp **** {
GAS LISTING /tmp/ccc5RAP0.s 			page 6


 136:src/../h/riscv.hpp ****     uint64 volatile stval;
 137:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 138:src/../h/riscv.hpp ****     return stval;
 139:src/../h/riscv.hpp **** }
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 142:src/../h/riscv.hpp **** {
 143:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 144:src/../h/riscv.hpp **** }
 145:src/../h/riscv.hpp **** 
 146:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 147:src/../h/riscv.hpp **** {
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     uint64 volatile sip;
 159:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 160:src/../h/riscv.hpp ****     return sip;
 161:src/../h/riscv.hpp **** }
 162:src/../h/riscv.hpp **** 
 163:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 164:src/../h/riscv.hpp **** {
 165:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 166:src/../h/riscv.hpp **** }
 167:src/../h/riscv.hpp **** 
 168:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 169:src/../h/riscv.hpp **** {
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 112              		.loc 2 170 5
 113              		.loc 2 170 68 is_stmt 0
 114 009c 93072000 		li	a5,2
 115              	#APP
 116              	# 170 "src/../h/riscv.hpp" 1
 171              	}
 117              		csrs sstatus, a5
 118              	# 0 "" 2
 119              	.LVL10:
 120              	#NO_APP
 121              	.L5:
 122              	.LBE9:
 123              	.LBE8:
  32:src/main.cpp  **** 
  33:src/main.cpp  **** 
  34:src/main.cpp  ****     while(!guard) {
 124              		.loc 1 34 5 is_stmt 1
 125              		.loc 1 34 11
 126 00a4 97070000 		lw	a5,.LANCHOR0
 126      83A70700 
 127 00ac 63980700 		bnez	a5,.L4
  35:src/main.cpp  ****         thread_dispatch();
GAS LISTING /tmp/ccc5RAP0.s 			page 7


 128              		.loc 1 35 9
 129              		.loc 1 35 24 is_stmt 0
 130 00b0 97000000 		call	_Z15thread_dispatchv@plt
 130      E7800000 
 131              	.LVL11:
  34:src/main.cpp  ****         thread_dispatch();
 132              		.loc 1 34 5
 133 00b8 6FF0DFFE 		j	.L5
 134              	.L4:
  36:src/main.cpp  ****     }
  37:src/main.cpp  ****     //delete mainTCB;
  38:src/main.cpp  ****     printString("main gotov\n");
 135              		.loc 1 38 5 is_stmt 1
 136              		.loc 1 38 16 is_stmt 0
 137 00bc 17050000 		lla	a0,.LC0
 137      13050500 
 138 00c4 97000000 		call	_Z11printStringPKc@plt
 138      E7800000 
 139              	.LVL12:
  39:src/main.cpp  **** 
  40:src/main.cpp  **** 
  41:src/main.cpp  ****     // printString("created main thread\n");
  42:src/main.cpp  ****     // TCB *threads[2];
  43:src/main.cpp  ****     // uint64* sp = (uint64*) MemoryAllocator::__mem__alloc(Riscv::roundToBlks(DEFAULT_STACK_SIZE))
  44:src/main.cpp  ****     // threads[0] = TCB::createThread(workerBodyA,nullptr, sp);
  45:src/main.cpp  ****     // printString("A created\n");
  46:src/main.cpp  ****     // uint64* sp2 = (uint64*) MemoryAllocator::__mem__alloc(Riscv::roundToBlks(DEFAULT_STACK_SIZE)
  47:src/main.cpp  ****     // threads[1] = TCB::createThread(workerBodyB,nullptr, sp2);
  48:src/main.cpp  ****     // printString("B created\n");
  49:src/main.cpp  ****     //
  50:src/main.cpp  ****     // // printString("while loop\n");
  51:src/main.cpp  ****     // while(!(threads[0]->isFinished() && threads[1]->isFinished())) {
  52:src/main.cpp  ****     //
  53:src/main.cpp  ****     //     thread_dispatch();
  54:src/main.cpp  ****     //
  55:src/main.cpp  ****     //
  56:src/main.cpp  ****     // }
  57:src/main.cpp  ****     // while(!threads[0]->isFinished()) {
  58:src/main.cpp  ****     //     //printString("while");
  59:src/main.cpp  ****     //     TCB::dispatch();
  60:src/main.cpp  ****     // }
  61:src/main.cpp  ****     //MemoryAllocator::__mem__free(mainTCB);
  62:src/main.cpp  ****     //
  63:src/main.cpp  ****     // delete mainTCB;
  64:src/main.cpp  ****     // delete threads[0];
  65:src/main.cpp  ****     // delete threads[1];
  66:src/main.cpp  ****     // //delete threads;
  67:src/main.cpp  ****     // printString("finished\n");
  68:src/main.cpp  **** 
  69:src/main.cpp  **** 
  70:src/main.cpp  **** 
  71:src/main.cpp  **** 
  72:src/main.cpp  ****     //Riscv::syscall(4);
  73:src/main.cpp  ****     //__putc('\n'); __putc('f'); __putc('\n');
  74:src/main.cpp  ****     // int *arr;
  75:src/main.cpp  ****     // arr = (int*) mem_alloc(125);
  76:src/main.cpp  ****     //
GAS LISTING /tmp/ccc5RAP0.s 			page 8


  77:src/main.cpp  ****     // for(int i=1;i<6;i++) {
  78:src/main.cpp  ****     //     arr[i] = i;
  79:src/main.cpp  ****     // }
  80:src/main.cpp  **** /*
  81:src/main.cpp  ****     int *arr2;
  82:src/main.cpp  ****     arr2 = (int*) mem_alloc(49);
  83:src/main.cpp  ****     for(int i=1;i<6;i++) {
  84:src/main.cpp  ****         arr2[i] = i;
  85:src/main.cpp  ****     }*/
  86:src/main.cpp  ****     //MemoryAllocator::__mem__free(arr);
  87:src/main.cpp  ****     //mem_free(arr);
  88:src/main.cpp  ****     /*if(a<0) {
  89:src/main.cpp  ****         __putc('-'); __putc('\n');
  90:src/main.cpp  ****     } else {
  91:src/main.cpp  ****         __putc('+'); __putc('\n');
  92:src/main.cpp  ****     }*/
  93:src/main.cpp  **** }...
 140              		.loc 1 93 1
 141 00cc 83308100 		ld	ra,8(sp)
 142              		.cfi_restore 1
 143 00d0 03340100 		ld	s0,0(sp)
 144              		.cfi_restore 8
 145              		.cfi_def_cfa 2, 16
 146 00d4 13010101 		addi	sp,sp,16
 147              		.cfi_def_cfa_offset 0
 148 00d8 67800000 		jr	ra
 149              		.cfi_endproc
 150              	.LFE36:
 152              		.globl	guard
 153              		.bss
 154              		.align	2
 155              		.set	.LANCHOR0,. + 0
 158              	guard:
 159 0000 00000000 		.zero	4
 160              		.text
 161              	.Letext0:
 162              		.file 3 "src/../h/../lib/hw.h"
 163              		.file 4 "src/../h/memoryallocator.hpp"
 164              		.file 5 "src/../h/tcb.hpp"
 165              		.file 6 "src/../h/syscall_c.h"
 166              		.file 7 "src/../test/printing.hpp"
GAS LISTING /tmp/ccc5RAP0.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccc5RAP0.s:9      .text:0000000000000000 _Z10userMainWrPv
     /tmp/ccc5RAP0.s:13     .text:0000000000000000 .L0 
     /tmp/ccc5RAP0.s:14     .text:0000000000000000 .L0 
     /tmp/ccc5RAP0.s:15     .text:0000000000000004 .L0 
     /tmp/ccc5RAP0.s:18     .text:000000000000000c .L0 
     /tmp/ccc5RAP0.s:19     .text:000000000000000c .L0 
     /tmp/ccc5RAP0.s:21     .text:0000000000000010 .L0 
     /tmp/ccc5RAP0.s:23     .text:0000000000000010 .L0 
     /tmp/ccc5RAP0.s:24     .text:0000000000000010 .L0 
     /tmp/ccc5RAP0.s:27     .text:0000000000000018 .L0 
     /tmp/ccc5RAP0.s:28     .text:0000000000000018 .L0 
     /tmp/ccc5RAP0.s:31     .text:0000000000000024 .L0 
     /tmp/ccc5RAP0.s:32     .text:0000000000000028 .L0 
     /tmp/ccc5RAP0.s:34     .text:000000000000002c .L0 
     /tmp/ccc5RAP0.s:35     .text:000000000000002c .L0 
     /tmp/ccc5RAP0.s:37     .text:0000000000000030 .L0 
     /tmp/ccc5RAP0.s:39     .text:0000000000000034 .L0 
     /tmp/ccc5RAP0.s:50     .text:0000000000000034 main
     /tmp/ccc5RAP0.s:53     .text:0000000000000034 .L0 
     /tmp/ccc5RAP0.s:54     .text:0000000000000034 .L0 
     /tmp/ccc5RAP0.s:55     .text:0000000000000038 .L0 
     /tmp/ccc5RAP0.s:58     .text:0000000000000040 .L0 
     /tmp/ccc5RAP0.s:59     .text:0000000000000040 .L0 
     /tmp/ccc5RAP0.s:61     .text:0000000000000044 .L0 
     /tmp/ccc5RAP0.s:63     .text:0000000000000044 .L0 
     /tmp/ccc5RAP0.s:64     .text:0000000000000044 .L0 
     /tmp/ccc5RAP0.s:67     .text:000000000000004c .L0 
     /tmp/ccc5RAP0.s:68     .text:000000000000004c .L0 
     /tmp/ccc5RAP0.s:74     .text:0000000000000054 .L0 
  src/../h/riscv.hpp:131    .text:0000000000000054 .L0 
     /tmp/ccc5RAP0.s:84     .text:0000000000000058 .L0 
     /tmp/ccc5RAP0.s:85     .text:0000000000000058 .L0 
     /tmp/ccc5RAP0.s:91     .text:000000000000006c .L0 
     /tmp/ccc5RAP0.s:92     .text:000000000000006c .L0 
     /tmp/ccc5RAP0.s:95     .text:0000000000000078 .L0 
     /tmp/ccc5RAP0.s:96     .text:0000000000000078 .L0 
     /tmp/ccc5RAP0.s:103    .text:0000000000000088 .L0 
     /tmp/ccc5RAP0.s:104    .text:0000000000000088 .L0 
     /tmp/ccc5RAP0.s:112    .text:000000000000009c .L0 
     /tmp/ccc5RAP0.s:113    .text:000000000000009c .L0 
     /tmp/ccc5RAP0.s:114    .text:000000000000009c .L0 
     /tmp/ccc5RAP0.s:125    .text:00000000000000a4 .L0 
     /tmp/ccc5RAP0.s:126    .text:00000000000000a4 .L0 
     /tmp/ccc5RAP0.s:129    .text:00000000000000b0 .L0 
     /tmp/ccc5RAP0.s:130    .text:00000000000000b0 .L0 
     /tmp/ccc5RAP0.s:133    .text:00000000000000b8 .L0 
     /tmp/ccc5RAP0.s:136    .text:00000000000000bc .L0 
     /tmp/ccc5RAP0.s:137    .text:00000000000000bc .L0 
     /tmp/ccc5RAP0.s:141    .text:00000000000000cc .L0 
     /tmp/ccc5RAP0.s:142    .text:00000000000000d0 .L0 
     /tmp/ccc5RAP0.s:144    .text:00000000000000d4 .L0 
     /tmp/ccc5RAP0.s:145    .text:00000000000000d4 .L0 
     /tmp/ccc5RAP0.s:147    .text:00000000000000d8 .L0 
     /tmp/ccc5RAP0.s:149    .text:00000000000000dc .L0 
     /tmp/ccc5RAP0.s:158    .bss:0000000000000000 guard
GAS LISTING /tmp/ccc5RAP0.s 			page 10


     /tmp/ccc5RAP0.s:155    .bss:0000000000000000 .LANCHOR0
     /tmp/ccc5RAP0.s:167    .text:00000000000000dc .L0 
     /tmp/ccc5RAP0.s:29     .text:000000000000001c .L0 
     /tmp/ccc5RAP0.s:68     .text:000000000000004c .L0 
     /tmp/ccc5RAP0.s:92     .text:000000000000006c .L0 
     /tmp/ccc5RAP0.s:105    .text:000000000000008c .L0 
     /tmp/ccc5RAP0.s:126    .text:00000000000000a4 .L0 
     /tmp/ccc5RAP0.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccc5RAP0.s:137    .text:00000000000000bc .L0 
     /tmp/ccc5RAP0.s:134    .text:00000000000000bc .L4
     /tmp/ccc5RAP0.s:121    .text:00000000000000a4 .L5
     /tmp/ccc5RAP0.s:1184   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccc5RAP0.s:2327   .debug_str:0000000000000720 .LASF133
     /tmp/ccc5RAP0.s:2217   .debug_str:00000000000003ef .LASF134
     /tmp/ccc5RAP0.s:2233   .debug_str:0000000000000479 .LASF135
     /tmp/ccc5RAP0.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccc5RAP0.s:161    .text:00000000000000dc .Letext0
     /tmp/ccc5RAP0.s:2083   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccc5RAP0.s:2253   .debug_str:000000000000053b .LASF0
     /tmp/ccc5RAP0.s:2265   .debug_str:0000000000000582 .LASF1
     /tmp/ccc5RAP0.s:2235   .debug_str:0000000000000495 .LASF2
     /tmp/ccc5RAP0.s:2197   .debug_str:0000000000000377 .LASF4
     /tmp/ccc5RAP0.s:2307   .debug_str:0000000000000696 .LASF3
     /tmp/ccc5RAP0.s:2115   .debug_str:00000000000000bd .LASF5
     /tmp/ccc5RAP0.s:2269   .debug_str:00000000000005a1 .LASF6
     /tmp/ccc5RAP0.s:2251   .debug_str:0000000000000528 .LASF7
     /tmp/ccc5RAP0.s:2339   .debug_str:0000000000000862 .LASF8
     /tmp/ccc5RAP0.s:2183   .debug_str:00000000000002ff .LASF9
     /tmp/ccc5RAP0.s:2283   .debug_str:00000000000005ff .LASF10
     /tmp/ccc5RAP0.s:2329   .debug_str:00000000000007e4 .LASF11
     /tmp/ccc5RAP0.s:2119   .debug_str:00000000000000d0 .LASF12
     /tmp/ccc5RAP0.s:2091   .debug_str:000000000000001b .LASF13
     /tmp/ccc5RAP0.s:2129   .debug_str:0000000000000134 .LASF14
     /tmp/ccc5RAP0.s:2299   .debug_str:0000000000000651 .LASF15
     /tmp/ccc5RAP0.s:2141   .debug_str:0000000000000198 .LASF16
     /tmp/ccc5RAP0.s:2347   .debug_str:000000000000089e .LASF136
     /tmp/ccc5RAP0.s:2231   .debug_str:0000000000000469 .LASF23
     /tmp/ccc5RAP0.s:2107   .debug_str:0000000000000095 .LASF137
     /tmp/ccc5RAP0.s:2321   .debug_str:0000000000000702 .LASF17
     /tmp/ccc5RAP0.s:2365   .debug_str:0000000000000930 .LASF18
     /tmp/ccc5RAP0.s:2275   .debug_str:00000000000005dc .LASF30
     /tmp/ccc5RAP0.s:2221   .debug_str:0000000000000402 .LASF32
     /tmp/ccc5RAP0.s:2279   .debug_str:00000000000005e6 .LASF19
     /tmp/ccc5RAP0.s:2241   .debug_str:00000000000004c7 .LASF21
     /tmp/ccc5RAP0.s:2281   .debug_str:00000000000005f3 .LASF20
     /tmp/ccc5RAP0.s:2179   .debug_str:00000000000002c0 .LASF22
     /tmp/ccc5RAP0.s:2215   .debug_str:00000000000003e6 .LASF63
     /tmp/ccc5RAP0.s:2099   .debug_str:0000000000000056 .LASF138
     /tmp/ccc5RAP0.s:2273   .debug_str:00000000000005bf .LASF139
     /tmp/ccc5RAP0.s:2293   .debug_str:000000000000063d .LASF140
     /tmp/ccc5RAP0.s:2155   .debug_str:000000000000022c .LASF24
     /tmp/ccc5RAP0.s:2171   .debug_str:000000000000028a .LASF25
     /tmp/ccc5RAP0.s:2271   .debug_str:00000000000005b4 .LASF36
     /tmp/ccc5RAP0.s:2331   .debug_str:00000000000007f3 .LASF38
     /tmp/ccc5RAP0.s:2237   .debug_str:00000000000004a3 .LASF26
     /tmp/ccc5RAP0.s:2245   .debug_str:00000000000004f9 .LASF27
     /tmp/ccc5RAP0.s:2149   .debug_str:0000000000000201 .LASF69
GAS LISTING /tmp/ccc5RAP0.s 			page 11


     /tmp/ccc5RAP0.s:2191   .debug_str:0000000000000349 .LASF71
     /tmp/ccc5RAP0.s:2161   .debug_str:0000000000000243 .LASF28
     /tmp/ccc5RAP0.s:2227   .debug_str:0000000000000448 .LASF29
     /tmp/ccc5RAP0.s:2301   .debug_str:0000000000000667 .LASF50
     /tmp/ccc5RAP0.s:2335   .debug_str:000000000000081c .LASF52
     /tmp/ccc5RAP0.s:2257   .debug_str:000000000000054f .LASF31
     /tmp/ccc5RAP0.s:2121   .debug_str:00000000000000e0 .LASF33
     /tmp/ccc5RAP0.s:2213   .debug_str:00000000000003d9 .LASF34
     /tmp/ccc5RAP0.s:2337   .debug_str:0000000000000839 .LASF35
     /tmp/ccc5RAP0.s:2097   .debug_str:000000000000004c .LASF37
     /tmp/ccc5RAP0.s:2123   .debug_str:00000000000000fa .LASF39
     /tmp/ccc5RAP0.s:2201   .debug_str:0000000000000396 .LASF40
     /tmp/ccc5RAP0.s:2103   .debug_str:0000000000000063 .LASF41
     /tmp/ccc5RAP0.s:2323   .debug_str:0000000000000707 .LASF42
     /tmp/ccc5RAP0.s:2095   .debug_str:0000000000000034 .LASF43
     /tmp/ccc5RAP0.s:2297   .debug_str:0000000000000649 .LASF44
     /tmp/ccc5RAP0.s:2305   .debug_str:000000000000067d .LASF45
     /tmp/ccc5RAP0.s:2345   .debug_str:0000000000000891 .LASF46
     /tmp/ccc5RAP0.s:2203   .debug_str:00000000000003a1 .LASF47
     /tmp/ccc5RAP0.s:2303   .debug_str:000000000000066d .LASF48
     /tmp/ccc5RAP0.s:2351   .debug_str:00000000000008b2 .LASF49
     /tmp/ccc5RAP0.s:2313   .debug_str:00000000000006b6 .LASF51
     /tmp/ccc5RAP0.s:2319   .debug_str:00000000000006ee .LASF53
     /tmp/ccc5RAP0.s:2369   .debug_str:000000000000093a .LASF54
     /tmp/ccc5RAP0.s:2353   .debug_str:00000000000008c5 .LASF55
     /tmp/ccc5RAP0.s:2205   .debug_str:00000000000003b4 .LASF56
     /tmp/ccc5RAP0.s:2195   .debug_str:0000000000000371 .LASF57
     /tmp/ccc5RAP0.s:2209   .debug_str:00000000000003c4 .LASF58
     /tmp/ccc5RAP0.s:2289   .debug_str:000000000000062c .LASF59
     /tmp/ccc5RAP0.s:2311   .debug_str:00000000000006af .LASF60
     /tmp/ccc5RAP0.s:2291   .debug_str:0000000000000635 .LASF61
     /tmp/ccc5RAP0.s:2085   .debug_str:0000000000000000 .LASF62
     /tmp/ccc5RAP0.s:2343   .debug_str:0000000000000886 .LASF141
     /tmp/ccc5RAP0.s:2189   .debug_str:000000000000032c .LASF142
     /tmp/ccc5RAP0.s:2131   .debug_str:0000000000000140 .LASF115
     /tmp/ccc5RAP0.s:2147   .debug_str:00000000000001d1 .LASF117
     /tmp/ccc5RAP0.s:2223   .debug_str:0000000000000425 .LASF64
     /tmp/ccc5RAP0.s:2261   .debug_str:0000000000000560 .LASF65
     /tmp/ccc5RAP0.s:2145   .debug_str:00000000000001c2 .LASF143
     /tmp/ccc5RAP0.s:2139   .debug_str:000000000000018c .LASF66
     /tmp/ccc5RAP0.s:2349   .debug_str:00000000000008a5 .LASF67
     /tmp/ccc5RAP0.s:2117   .debug_str:00000000000000c4 .LASF68
     /tmp/ccc5RAP0.s:2093   .debug_str:000000000000002b .LASF70
     /tmp/ccc5RAP0.s:2317   .debug_str:00000000000006d9 .LASF72
     /tmp/ccc5RAP0.s:2157   .debug_str:0000000000000231 .LASF73
     /tmp/ccc5RAP0.s:2137   .debug_str:0000000000000177 .LASF74
     /tmp/ccc5RAP0.s:2309   .debug_str:00000000000006a8 .LASF75
     /tmp/ccc5RAP0.s:2287   .debug_str:0000000000000619 .LASF76
     /tmp/ccc5RAP0.s:2295   .debug_str:0000000000000642 .LASF77
     /tmp/ccc5RAP0.s:2181   .debug_str:00000000000002ec .LASF78
     /tmp/ccc5RAP0.s:2175   .debug_str:00000000000002b0 .LASF79
     /tmp/ccc5RAP0.s:2143   .debug_str:00000000000001ae .LASF80
     /tmp/ccc5RAP0.s:2087   .debug_str:0000000000000008 .LASF81
     /tmp/ccc5RAP0.s:2361   .debug_str:0000000000000909 .LASF82
     /tmp/ccc5RAP0.s:2163   .debug_str:000000000000024b .LASF83
     /tmp/ccc5RAP0.s:2125   .debug_str:0000000000000116 .LASF84
     /tmp/ccc5RAP0.s:2193   .debug_str:0000000000000369 .LASF85
GAS LISTING /tmp/ccc5RAP0.s 			page 12


     /tmp/ccc5RAP0.s:2165   .debug_str:0000000000000253 .LASF86
     /tmp/ccc5RAP0.s:2255   .debug_str:0000000000000548 .LASF87
     /tmp/ccc5RAP0.s:2363   .debug_str:000000000000091d .LASF88
     /tmp/ccc5RAP0.s:2109   .debug_str:000000000000009f .LASF89
     /tmp/ccc5RAP0.s:2173   .debug_str:000000000000029d .LASF90
     /tmp/ccc5RAP0.s:2243   .debug_str:00000000000004f3 .LASF91
     /tmp/ccc5RAP0.s:2325   .debug_str:000000000000070e .LASF92
     /tmp/ccc5RAP0.s:2219   .debug_str:00000000000003fc .LASF93
     /tmp/ccc5RAP0.s:2371   .debug_str:000000000000094d .LASF94
     /tmp/ccc5RAP0.s:2249   .debug_str:000000000000051d .LASF95
     /tmp/ccc5RAP0.s:2239   .debug_str:00000000000004af .LASF96
     /tmp/ccc5RAP0.s:2207   .debug_str:00000000000003b9 .LASF97
     /tmp/ccc5RAP0.s:2225   .debug_str:0000000000000430 .LASF98
     /tmp/ccc5RAP0.s:2127   .debug_str:000000000000012a .LASF99
     /tmp/ccc5RAP0.s:2229   .debug_str:0000000000000453 .LASF100
     /tmp/ccc5RAP0.s:2167   .debug_str:0000000000000267 .LASF101
     /tmp/ccc5RAP0.s:2185   .debug_str:000000000000030d .LASF102
     /tmp/ccc5RAP0.s:2333   .debug_str:0000000000000811 .LASF103
     /tmp/ccc5RAP0.s:2355   .debug_str:00000000000008d9 .LASF104
     /tmp/ccc5RAP0.s:2267   .debug_str:0000000000000595 .LASF105
     /tmp/ccc5RAP0.s:2135   .debug_str:000000000000015e .LASF106
     /tmp/ccc5RAP0.s:2359   .debug_str:00000000000008fd .LASF107
     /tmp/ccc5RAP0.s:2169   .debug_str:0000000000000271 .LASF108
     /tmp/ccc5RAP0.s:2259   .debug_str:0000000000000558 .LASF109
     /tmp/ccc5RAP0.s:2199   .debug_str:000000000000037e .LASF110
     /tmp/ccc5RAP0.s:2187   .debug_str:0000000000000323 .LASF111
     /tmp/ccc5RAP0.s:2153   .debug_str:0000000000000217 .LASF112
     /tmp/ccc5RAP0.s:2177   .debug_str:00000000000002b8 .LASF113
     /tmp/ccc5RAP0.s:2341   .debug_str:0000000000000872 .LASF114
     /tmp/ccc5RAP0.s:2285   .debug_str:000000000000060e .LASF116
     /tmp/ccc5RAP0.s:2263   .debug_str:0000000000000566 .LASF118
     /tmp/ccc5RAP0.s:2101   .debug_str:000000000000005e .LASF119
     /tmp/ccc5RAP0.s:2111   .debug_str:00000000000000a6 .LASF120
     /tmp/ccc5RAP0.s:2277   .debug_str:00000000000005e1 .LASF121
     /tmp/ccc5RAP0.s:51     .text:0000000000000034 .LFB36
     /tmp/ccc5RAP0.s:150    .text:00000000000000dc .LFE36
     /tmp/ccc5RAP0.s:2151   .debug_str:000000000000020f .LASF122
     /tmp/ccc5RAP0.s:2044   .debug_loc:0000000000000000 .LLST0
     /tmp/ccc5RAP0.s:2051   .debug_loc:0000000000000023 .LLST1
     /tmp/ccc5RAP0.s:70     .text:0000000000000054 .LBB6
     /tmp/ccc5RAP0.s:82     .text:0000000000000058 .LBE6
     /tmp/ccc5RAP0.s:110    .text:000000000000009c .LBB8
     /tmp/ccc5RAP0.s:123    .text:00000000000000a4 .LBE8
     /tmp/ccc5RAP0.s:2062   .debug_loc:0000000000000059 .LLST2
     /tmp/ccc5RAP0.s:65     .text:000000000000004c .LVL1
     /tmp/ccc5RAP0.s:89     .text:000000000000006c .LVL4
     /tmp/ccc5RAP0.s:99     .text:0000000000000084 .LVL6
     /tmp/ccc5RAP0.s:108    .text:000000000000009c .LVL9
     /tmp/ccc5RAP0.s:131    .text:00000000000000b8 .LVL11
     /tmp/ccc5RAP0.s:139    .text:00000000000000cc .LVL12
     /tmp/ccc5RAP0.s:2089   .debug_str:0000000000000010 .LASF123
     /tmp/ccc5RAP0.s:2113   .debug_str:00000000000000ac .LASF124
     /tmp/ccc5RAP0.s:10     .text:0000000000000000 .LFB35
     /tmp/ccc5RAP0.s:40     .text:0000000000000034 .LFE35
     /tmp/ccc5RAP0.s:25     .text:0000000000000018 .LVL0
     /tmp/ccc5RAP0.s:2367   .debug_str:0000000000000935 .LASF125
     /tmp/ccc5RAP0.s:2247   .debug_str:0000000000000517 .LASF126
GAS LISTING /tmp/ccc5RAP0.s 			page 13


     /tmp/ccc5RAP0.s:2105   .debug_str:0000000000000080 .LASF127
     /tmp/ccc5RAP0.s:2133   .debug_str:000000000000014e .LASF129
     /tmp/ccc5RAP0.s:2315   .debug_str:00000000000006c6 .LASF128
     /tmp/ccc5RAP0.s:2357   .debug_str:00000000000008f1 .LASF130
     /tmp/ccc5RAP0.s:2211   .debug_str:00000000000003cc .LASF131
     /tmp/ccc5RAP0.s:2159   .debug_str:000000000000023a .LASF132
     /tmp/ccc5RAP0.s:97     .text:000000000000007c .LVL5
     /tmp/ccc5RAP0.s:101    .text:0000000000000088 .LVL7
     /tmp/ccc5RAP0.s:106    .text:0000000000000094 .LVL8
     /tmp/ccc5RAP0.s:119    .text:00000000000000a4 .LVL10
     /tmp/ccc5RAP0.s:168    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z8userMainv
_ZN6Kernel15MemoryAllocator4initEv
_ZN5Riscv11intpRoutineEv
_ZN6Kernel3TCB12createThreadEPFvPvES1_Pm
_ZN6Kernel3TCB7runningE
_ZN6Kernel15MemoryAllocator12__mem__allocEm
_Z15thread_dispatchv
_Z11printStringPKc
